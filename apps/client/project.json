{
  "name": "client",
  "$schema": "../../node_modules/nx/schemas/tenant-schema.json",
  "tenantType": "application",
  "prefix": "app",
  "sourceRoot": "apps/client/src",
  "tags": [],
  "targets": {
    "build": {
      "executor": "@angular-devkit/build-angular:browser",
      "outputs": ["{options.outputPath}"],
      "options": {
        "allowedCommonJsDependencies": [
          "@nestjs-mod/misc",
          "@jsverse/transloco-messageformat",
          "@jsverse/transloco-keys-manager/marker",
          "lodash/fp/isEqual",
          "lodash/fp/omit",
          "cross-fetch"
        ],
        "outputPath": "dist/apps/client/browser",
        "index": "apps/client/src/index.html",
        "main": "apps/client/src/main.ts",
        "polyfills": ["zone.js"],
        "tsConfig": "apps/client/tsconfig.app.json",
        "inlineStyleLanguage": "scss",
        "assets": [
          "apps/client/src/assets",
          {
            "glob": "**/*",
            "input": "apps/client/public"
          },
          {
            "glob": "**/*",
            "input": "./node_modules/@ant-design/icons-angular/src/inline-svg/",
            "output": "/assets/"
          },
          {
            "glob": "**/package.json",
            "input": "./apps/client/",
            "output": "./"
          },
          {
            "glob": "**/*.json",
            "input": "./node_modules/@nestjs-mod/afat/i18n/",
            "output": "/assets/i18n/nestjs-mod-afat/"
          }
        ],
        "styles": ["apps/client/src/styles.scss"],
        "scripts": []
      },
      "configurations": {
        "production": {
          "budgets": [
            {
              "type": "initial",
              "maximumWarning": "600kb",
              "maximumError": "5mb"
            },
            {
              "type": "anyComponentStyle",
              "maximumWarning": "2kb",
              "maximumError": "4kb"
            }
          ],
          "outputHashing": "all",
          "fileReplacements": [
            {
              "replace": "apps/client/src/environments/environment.ts",
              "with": "apps/client/src/environments/environment.prod.ts"
            }
          ]
        },
        "supabase-prod": {
          "budgets": [
            {
              "type": "initial",
              "maximumWarning": "600kb",
              "maximumError": "5mb"
            },
            {
              "type": "anyComponentStyle",
              "maximumWarning": "2kb",
              "maximumError": "4kb"
            }
          ],
          "outputHashing": "all",
          "fileReplacements": [
            {
              "replace": "apps/client/src/environments/environment.ts",
              "with": "apps/client/src/environments/environment.supabase-prod.ts"
            }
          ]
        },
        "supabase": {
          "budgets": [
            {
              "type": "initial",
              "maximumWarning": "600kb",
              "maximumError": "5mb"
            },
            {
              "type": "anyComponentStyle",
              "maximumWarning": "2kb",
              "maximumError": "4kb"
            }
          ],
          "outputHashing": "all",
          "fileReplacements": [
            {
              "replace": "apps/client/src/environments/environment.ts",
              "with": "apps/client/src/environments/environment.supabase.ts"
            }
          ]
        },
        "development": {
          "buildOptimizer": false,
          "optimization": false,
          "vendorChunk": true,
          "extractLicenses": false,
          "sourceMap": true,
          "namedChunks": true
        }
      },
      "defaultConfiguration": "production"
    },
    "serve": {
      "executor": "@angular-devkit/build-angular:dev-server",
      "configurations": {
        "production": {
          "buildTarget": "client:build:production"
        },
        "development": {
          "buildTarget": "client:build:development"
        },
        "supabase-prod": {
          "buildTarget": "client:build:supabase-prod"
        },
        "supabase": {
          "buildTarget": "client:build:supabase"
        }
      },
      "defaultConfiguration": "development"
    },
    "extract-i18n": {
      "executor": "@angular-devkit/build-angular:extract-i18n",
      "options": {
        "buildTarget": "client:build"
      }
    },
    "lint": {
      "executor": "@nx/eslint:lint"
    },
    "test": {
      "executor": "@nx/jest:jest",
      "outputs": ["{workspaceRoot}/coverage/{tenantRoot}"],
      "options": {
        "jestConfig": "apps/client/jest.config.ts"
      }
    },
    "server": {
      "dependsOn": ["build"],
      "executor": "@angular-devkit/build-angular:server",
      "options": {
        "outputPath": "dist/apps/client/server",
        "main": "apps/client/server.ts",
        "tsConfig": "apps/client/tsconfig.server.json",
        "inlineStyleLanguage": "scss"
      },
      "configurations": {
        "production": {
          "outputHashing": "media"
        },
        "development": {
          "buildOptimizer": false,
          "optimization": false,
          "sourceMap": true,
          "extractLicenses": false,
          "vendorChunk": true
        }
      },
      "defaultConfiguration": "production"
    },
    "serve-ssr": {
      "executor": "@angular-devkit/build-angular:ssr-dev-server",
      "configurations": {
        "development": {
          "browserTarget": "client:build:development",
          "serverTarget": "client:server:development"
        },
        "production": {
          "browserTarget": "client:build:production",
          "serverTarget": "client:server:production"
        }
      },
      "defaultConfiguration": "development"
    },
    "prerender": {
      "executor": "@angular-devkit/build-angular:prerender",
      "options": {
        "routes": ["/"]
      },
      "configurations": {
        "development": {
          "browserTarget": "client:build:development",
          "serverTarget": "client:server:development"
        },
        "production": {
          "browserTarget": "client:build:production",
          "serverTarget": "client:server:production"
        }
      },
      "defaultConfiguration": "production"
    },
    "semantic-release": {
      "executor": "@theunderscorer/nx-semantic-release:semantic-release",
      "options": {
        "changelog": true,
        "npm": true,
        "github": true,
        "tagFormat": "client-v${VERSION}",
        "branches": [
          "master",
          {
            "name": "beta",
            "prerelease": true
          },
          {
            "name": "alpha",
            "prerelease": true
          }
        ]
      }
    }
  }
}
