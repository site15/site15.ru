/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/**
 * This file should be your main import to use Prisma. Through it you get access to all the models, enums, and input types.
 *
 * ðŸŸ¢ You can import this file directly.
 */

import * as process from 'node:process';
import * as path from 'node:path';

import * as runtime from '@prisma/client/runtime/client';
import * as $Enums from './enums';
import * as $Class from './internal/class';
import * as Prisma from './internal/prismaNamespace';

export * as $Enums from './enums';
/**
 * ## Prisma Client
 *
 * Type-safe database client for TypeScript
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more MetricsGithubMetrics
 * const metricsGithubMetrics = await prisma.metricsGithubMetric.findMany()
 * ```
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export const PrismaClient = $Class.getPrismaClientClass(__dirname);
export type PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  Log = $Class.LogOptions<ClientOptions>,
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = $Class.PrismaClient<ClientOptions, Log, ExtArgs>;
export { Prisma };

/**
 * Model MetricsGithubMetric
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type MetricsGithubMetric = Prisma.MetricsGithubMetricModel;
/**
 * Model MetricsGithubRepository
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type MetricsGithubRepository = Prisma.MetricsGithubRepositoryModel;
/**
 * Model MetricsGithubUser
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type MetricsGithubUser = Prisma.MetricsGithubUserModel;
/**
 * Model MetricsGithubUserRepository
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type MetricsGithubUserRepository = Prisma.MetricsGithubUserRepositoryModel;
/**
 * Model MetricsUser
 *
 */
export type MetricsUser = Prisma.MetricsUserModel;
/**
 * Model migrations_metrics
 *
 */
export type migrations_metrics = Prisma.migrations_metricsModel;
/**
 * Model MetricsGithubRepositoryStatistics
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type MetricsGithubRepositoryStatistics = Prisma.MetricsGithubRepositoryStatisticsModel;
/**
 * Model MetricsGithubTeam
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type MetricsGithubTeam = Prisma.MetricsGithubTeamModel;
/**
 * Model MetricsGithubTeamRepository
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type MetricsGithubTeamRepository = Prisma.MetricsGithubTeamRepositoryModel;
/**
 * Model MetricsGithubTeamUser
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type MetricsGithubTeamUser = Prisma.MetricsGithubTeamUserModel;
/**
 * Model MetricsGithubUserStatistics
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type MetricsGithubUserStatistics = Prisma.MetricsGithubUserStatisticsModel;

export type MetricsRole = $Enums.MetricsRole;
export const MetricsRole = $Enums.MetricsRole;
