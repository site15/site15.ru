/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/**
 * This file exports the `MetricsGithubUserStatistics` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from '@prisma/client/runtime/client';
import type * as $Enums from '../enums';
import type * as Prisma from '../internal/prismaNamespace';

/**
 * Model MetricsGithubUserStatistics
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type MetricsGithubUserStatisticsModel =
  runtime.Types.Result.DefaultSelection<Prisma.$MetricsGithubUserStatisticsPayload>;

export type AggregateMetricsGithubUserStatistics = {
  _count: MetricsGithubUserStatisticsCountAggregateOutputType | null;
  _avg: MetricsGithubUserStatisticsAvgAggregateOutputType | null;
  _sum: MetricsGithubUserStatisticsSumAggregateOutputType | null;
  _min: MetricsGithubUserStatisticsMinAggregateOutputType | null;
  _max: MetricsGithubUserStatisticsMaxAggregateOutputType | null;
};

export type MetricsGithubUserStatisticsAvgAggregateOutputType = {
  followersCount: number | null;
  followingCount: number | null;
};

export type MetricsGithubUserStatisticsSumAggregateOutputType = {
  followersCount: number | null;
  followingCount: number | null;
};

export type MetricsGithubUserStatisticsMinAggregateOutputType = {
  id: string | null;
  userId: string | null;
  periodType: string | null;
  followersCount: number | null;
  followingCount: number | null;
  recordedAt: Date | null;
  createdBy: string | null;
  updatedBy: string | null;
  createdAt: Date | null;
  updatedAt: Date | null;
  tenantId: string | null;
};

export type MetricsGithubUserStatisticsMaxAggregateOutputType = {
  id: string | null;
  userId: string | null;
  periodType: string | null;
  followersCount: number | null;
  followingCount: number | null;
  recordedAt: Date | null;
  createdBy: string | null;
  updatedBy: string | null;
  createdAt: Date | null;
  updatedAt: Date | null;
  tenantId: string | null;
};

export type MetricsGithubUserStatisticsCountAggregateOutputType = {
  id: number;
  userId: number;
  periodType: number;
  followersCount: number;
  followingCount: number;
  recordedAt: number;
  createdBy: number;
  updatedBy: number;
  createdAt: number;
  updatedAt: number;
  tenantId: number;
  _all: number;
};

export type MetricsGithubUserStatisticsAvgAggregateInputType = {
  followersCount?: true;
  followingCount?: true;
};

export type MetricsGithubUserStatisticsSumAggregateInputType = {
  followersCount?: true;
  followingCount?: true;
};

export type MetricsGithubUserStatisticsMinAggregateInputType = {
  id?: true;
  userId?: true;
  periodType?: true;
  followersCount?: true;
  followingCount?: true;
  recordedAt?: true;
  createdBy?: true;
  updatedBy?: true;
  createdAt?: true;
  updatedAt?: true;
  tenantId?: true;
};

export type MetricsGithubUserStatisticsMaxAggregateInputType = {
  id?: true;
  userId?: true;
  periodType?: true;
  followersCount?: true;
  followingCount?: true;
  recordedAt?: true;
  createdBy?: true;
  updatedBy?: true;
  createdAt?: true;
  updatedAt?: true;
  tenantId?: true;
};

export type MetricsGithubUserStatisticsCountAggregateInputType = {
  id?: true;
  userId?: true;
  periodType?: true;
  followersCount?: true;
  followingCount?: true;
  recordedAt?: true;
  createdBy?: true;
  updatedBy?: true;
  createdAt?: true;
  updatedAt?: true;
  tenantId?: true;
  _all?: true;
};

export type MetricsGithubUserStatisticsAggregateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which MetricsGithubUserStatistics to aggregate.
   */
  where?: Prisma.MetricsGithubUserStatisticsWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of MetricsGithubUserStatistics to fetch.
   */
  orderBy?:
    | Prisma.MetricsGithubUserStatisticsOrderByWithRelationInput
    | Prisma.MetricsGithubUserStatisticsOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.MetricsGithubUserStatisticsWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` MetricsGithubUserStatistics from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` MetricsGithubUserStatistics.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned MetricsGithubUserStatistics
   **/
  _count?: true | MetricsGithubUserStatisticsCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: MetricsGithubUserStatisticsAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: MetricsGithubUserStatisticsSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: MetricsGithubUserStatisticsMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: MetricsGithubUserStatisticsMaxAggregateInputType;
};

export type GetMetricsGithubUserStatisticsAggregateType<T extends MetricsGithubUserStatisticsAggregateArgs> = {
  [P in keyof T & keyof AggregateMetricsGithubUserStatistics]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateMetricsGithubUserStatistics[P]>
    : Prisma.GetScalarType<T[P], AggregateMetricsGithubUserStatistics[P]>;
};

export type MetricsGithubUserStatisticsGroupByArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.MetricsGithubUserStatisticsWhereInput;
  orderBy?:
    | Prisma.MetricsGithubUserStatisticsOrderByWithAggregationInput
    | Prisma.MetricsGithubUserStatisticsOrderByWithAggregationInput[];
  by: Prisma.MetricsGithubUserStatisticsScalarFieldEnum[] | Prisma.MetricsGithubUserStatisticsScalarFieldEnum;
  having?: Prisma.MetricsGithubUserStatisticsScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: MetricsGithubUserStatisticsCountAggregateInputType | true;
  _avg?: MetricsGithubUserStatisticsAvgAggregateInputType;
  _sum?: MetricsGithubUserStatisticsSumAggregateInputType;
  _min?: MetricsGithubUserStatisticsMinAggregateInputType;
  _max?: MetricsGithubUserStatisticsMaxAggregateInputType;
};

export type MetricsGithubUserStatisticsGroupByOutputType = {
  id: string;
  userId: string;
  periodType: string;
  followersCount: number | null;
  followingCount: number | null;
  recordedAt: Date;
  createdBy: string;
  updatedBy: string;
  createdAt: Date;
  updatedAt: Date;
  tenantId: string;
  _count: MetricsGithubUserStatisticsCountAggregateOutputType | null;
  _avg: MetricsGithubUserStatisticsAvgAggregateOutputType | null;
  _sum: MetricsGithubUserStatisticsSumAggregateOutputType | null;
  _min: MetricsGithubUserStatisticsMinAggregateOutputType | null;
  _max: MetricsGithubUserStatisticsMaxAggregateOutputType | null;
};

type GetMetricsGithubUserStatisticsGroupByPayload<T extends MetricsGithubUserStatisticsGroupByArgs> =
  Prisma.PrismaPromise<
    Array<
      Prisma.PickEnumerable<MetricsGithubUserStatisticsGroupByOutputType, T['by']> & {
        [P in keyof T & keyof MetricsGithubUserStatisticsGroupByOutputType]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], MetricsGithubUserStatisticsGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], MetricsGithubUserStatisticsGroupByOutputType[P]>;
      }
    >
  >;

export type MetricsGithubUserStatisticsWhereInput = {
  AND?: Prisma.MetricsGithubUserStatisticsWhereInput | Prisma.MetricsGithubUserStatisticsWhereInput[];
  OR?: Prisma.MetricsGithubUserStatisticsWhereInput[];
  NOT?: Prisma.MetricsGithubUserStatisticsWhereInput | Prisma.MetricsGithubUserStatisticsWhereInput[];
  id?: Prisma.UuidFilter<'MetricsGithubUserStatistics'> | string;
  userId?: Prisma.UuidFilter<'MetricsGithubUserStatistics'> | string;
  periodType?: Prisma.StringFilter<'MetricsGithubUserStatistics'> | string;
  followersCount?: Prisma.IntNullableFilter<'MetricsGithubUserStatistics'> | number | null;
  followingCount?: Prisma.IntNullableFilter<'MetricsGithubUserStatistics'> | number | null;
  recordedAt?: Prisma.DateTimeFilter<'MetricsGithubUserStatistics'> | Date | string;
  createdBy?: Prisma.UuidFilter<'MetricsGithubUserStatistics'> | string;
  updatedBy?: Prisma.UuidFilter<'MetricsGithubUserStatistics'> | string;
  createdAt?: Prisma.DateTimeFilter<'MetricsGithubUserStatistics'> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<'MetricsGithubUserStatistics'> | Date | string;
  tenantId?: Prisma.UuidFilter<'MetricsGithubUserStatistics'> | string;
  MetricsUser_MetricsGithubUserStatistics_createdByToMetricsUser?: Prisma.XOR<
    Prisma.MetricsUserScalarRelationFilter,
    Prisma.MetricsUserWhereInput
  >;
  MetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUser?: Prisma.XOR<
    Prisma.MetricsUserScalarRelationFilter,
    Prisma.MetricsUserWhereInput
  >;
  MetricsGithubUser?: Prisma.XOR<Prisma.MetricsGithubUserScalarRelationFilter, Prisma.MetricsGithubUserWhereInput>;
};

export type MetricsGithubUserStatisticsOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  periodType?: Prisma.SortOrder;
  followersCount?: Prisma.SortOrderInput | Prisma.SortOrder;
  followingCount?: Prisma.SortOrderInput | Prisma.SortOrder;
  recordedAt?: Prisma.SortOrder;
  createdBy?: Prisma.SortOrder;
  updatedBy?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  tenantId?: Prisma.SortOrder;
  MetricsUser_MetricsGithubUserStatistics_createdByToMetricsUser?: Prisma.MetricsUserOrderByWithRelationInput;
  MetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUser?: Prisma.MetricsUserOrderByWithRelationInput;
  MetricsGithubUser?: Prisma.MetricsGithubUserOrderByWithRelationInput;
};

export type MetricsGithubUserStatisticsWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string;
    tenantId_userId_periodType_recordedAt?: Prisma.MetricsGithubUserStatisticsTenantIdUserIdPeriodTypeRecordedAtCompoundUniqueInput;
    AND?: Prisma.MetricsGithubUserStatisticsWhereInput | Prisma.MetricsGithubUserStatisticsWhereInput[];
    OR?: Prisma.MetricsGithubUserStatisticsWhereInput[];
    NOT?: Prisma.MetricsGithubUserStatisticsWhereInput | Prisma.MetricsGithubUserStatisticsWhereInput[];
    userId?: Prisma.UuidFilter<'MetricsGithubUserStatistics'> | string;
    periodType?: Prisma.StringFilter<'MetricsGithubUserStatistics'> | string;
    followersCount?: Prisma.IntNullableFilter<'MetricsGithubUserStatistics'> | number | null;
    followingCount?: Prisma.IntNullableFilter<'MetricsGithubUserStatistics'> | number | null;
    recordedAt?: Prisma.DateTimeFilter<'MetricsGithubUserStatistics'> | Date | string;
    createdBy?: Prisma.UuidFilter<'MetricsGithubUserStatistics'> | string;
    updatedBy?: Prisma.UuidFilter<'MetricsGithubUserStatistics'> | string;
    createdAt?: Prisma.DateTimeFilter<'MetricsGithubUserStatistics'> | Date | string;
    updatedAt?: Prisma.DateTimeFilter<'MetricsGithubUserStatistics'> | Date | string;
    tenantId?: Prisma.UuidFilter<'MetricsGithubUserStatistics'> | string;
    MetricsUser_MetricsGithubUserStatistics_createdByToMetricsUser?: Prisma.XOR<
      Prisma.MetricsUserScalarRelationFilter,
      Prisma.MetricsUserWhereInput
    >;
    MetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUser?: Prisma.XOR<
      Prisma.MetricsUserScalarRelationFilter,
      Prisma.MetricsUserWhereInput
    >;
    MetricsGithubUser?: Prisma.XOR<Prisma.MetricsGithubUserScalarRelationFilter, Prisma.MetricsGithubUserWhereInput>;
  },
  'id' | 'tenantId_userId_periodType_recordedAt'
>;

export type MetricsGithubUserStatisticsOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  periodType?: Prisma.SortOrder;
  followersCount?: Prisma.SortOrderInput | Prisma.SortOrder;
  followingCount?: Prisma.SortOrderInput | Prisma.SortOrder;
  recordedAt?: Prisma.SortOrder;
  createdBy?: Prisma.SortOrder;
  updatedBy?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  tenantId?: Prisma.SortOrder;
  _count?: Prisma.MetricsGithubUserStatisticsCountOrderByAggregateInput;
  _avg?: Prisma.MetricsGithubUserStatisticsAvgOrderByAggregateInput;
  _max?: Prisma.MetricsGithubUserStatisticsMaxOrderByAggregateInput;
  _min?: Prisma.MetricsGithubUserStatisticsMinOrderByAggregateInput;
  _sum?: Prisma.MetricsGithubUserStatisticsSumOrderByAggregateInput;
};

export type MetricsGithubUserStatisticsScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.MetricsGithubUserStatisticsScalarWhereWithAggregatesInput
    | Prisma.MetricsGithubUserStatisticsScalarWhereWithAggregatesInput[];
  OR?: Prisma.MetricsGithubUserStatisticsScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.MetricsGithubUserStatisticsScalarWhereWithAggregatesInput
    | Prisma.MetricsGithubUserStatisticsScalarWhereWithAggregatesInput[];
  id?: Prisma.UuidWithAggregatesFilter<'MetricsGithubUserStatistics'> | string;
  userId?: Prisma.UuidWithAggregatesFilter<'MetricsGithubUserStatistics'> | string;
  periodType?: Prisma.StringWithAggregatesFilter<'MetricsGithubUserStatistics'> | string;
  followersCount?: Prisma.IntNullableWithAggregatesFilter<'MetricsGithubUserStatistics'> | number | null;
  followingCount?: Prisma.IntNullableWithAggregatesFilter<'MetricsGithubUserStatistics'> | number | null;
  recordedAt?: Prisma.DateTimeWithAggregatesFilter<'MetricsGithubUserStatistics'> | Date | string;
  createdBy?: Prisma.UuidWithAggregatesFilter<'MetricsGithubUserStatistics'> | string;
  updatedBy?: Prisma.UuidWithAggregatesFilter<'MetricsGithubUserStatistics'> | string;
  createdAt?: Prisma.DateTimeWithAggregatesFilter<'MetricsGithubUserStatistics'> | Date | string;
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<'MetricsGithubUserStatistics'> | Date | string;
  tenantId?: Prisma.UuidWithAggregatesFilter<'MetricsGithubUserStatistics'> | string;
};

export type MetricsGithubUserStatisticsCreateInput = {
  id?: string;
  periodType: string;
  followersCount?: number | null;
  followingCount?: number | null;
  recordedAt: Date | string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  tenantId: string;
  MetricsUser_MetricsGithubUserStatistics_createdByToMetricsUser: Prisma.MetricsUserCreateNestedOneWithoutMetricsGithubUserStatistics_MetricsGithubUserStatistics_createdByToMetricsUserInput;
  MetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUser: Prisma.MetricsUserCreateNestedOneWithoutMetricsGithubUserStatistics_MetricsGithubUserStatistics_updatedByToMetricsUserInput;
  MetricsGithubUser: Prisma.MetricsGithubUserCreateNestedOneWithoutMetricsGithubUserStatisticsInput;
};

export type MetricsGithubUserStatisticsUncheckedCreateInput = {
  id?: string;
  userId: string;
  periodType: string;
  followersCount?: number | null;
  followingCount?: number | null;
  recordedAt: Date | string;
  createdBy: string;
  updatedBy: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  tenantId: string;
};

export type MetricsGithubUserStatisticsUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  periodType?: Prisma.StringFieldUpdateOperationsInput | string;
  followersCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  followingCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  recordedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  tenantId?: Prisma.StringFieldUpdateOperationsInput | string;
  MetricsUser_MetricsGithubUserStatistics_createdByToMetricsUser?: Prisma.MetricsUserUpdateOneRequiredWithoutMetricsGithubUserStatistics_MetricsGithubUserStatistics_createdByToMetricsUserNestedInput;
  MetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUser?: Prisma.MetricsUserUpdateOneRequiredWithoutMetricsGithubUserStatistics_MetricsGithubUserStatistics_updatedByToMetricsUserNestedInput;
  MetricsGithubUser?: Prisma.MetricsGithubUserUpdateOneRequiredWithoutMetricsGithubUserStatisticsNestedInput;
};

export type MetricsGithubUserStatisticsUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.StringFieldUpdateOperationsInput | string;
  periodType?: Prisma.StringFieldUpdateOperationsInput | string;
  followersCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  followingCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  recordedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdBy?: Prisma.StringFieldUpdateOperationsInput | string;
  updatedBy?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  tenantId?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type MetricsGithubUserStatisticsCreateManyInput = {
  id?: string;
  userId: string;
  periodType: string;
  followersCount?: number | null;
  followingCount?: number | null;
  recordedAt: Date | string;
  createdBy: string;
  updatedBy: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  tenantId: string;
};

export type MetricsGithubUserStatisticsUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  periodType?: Prisma.StringFieldUpdateOperationsInput | string;
  followersCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  followingCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  recordedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  tenantId?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type MetricsGithubUserStatisticsUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.StringFieldUpdateOperationsInput | string;
  periodType?: Prisma.StringFieldUpdateOperationsInput | string;
  followersCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  followingCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  recordedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdBy?: Prisma.StringFieldUpdateOperationsInput | string;
  updatedBy?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  tenantId?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type MetricsGithubUserStatisticsListRelationFilter = {
  every?: Prisma.MetricsGithubUserStatisticsWhereInput;
  some?: Prisma.MetricsGithubUserStatisticsWhereInput;
  none?: Prisma.MetricsGithubUserStatisticsWhereInput;
};

export type MetricsGithubUserStatisticsOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type MetricsGithubUserStatisticsTenantIdUserIdPeriodTypeRecordedAtCompoundUniqueInput = {
  tenantId: string;
  userId: string;
  periodType: string;
  recordedAt: Date | string;
};

export type MetricsGithubUserStatisticsCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  periodType?: Prisma.SortOrder;
  followersCount?: Prisma.SortOrder;
  followingCount?: Prisma.SortOrder;
  recordedAt?: Prisma.SortOrder;
  createdBy?: Prisma.SortOrder;
  updatedBy?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  tenantId?: Prisma.SortOrder;
};

export type MetricsGithubUserStatisticsAvgOrderByAggregateInput = {
  followersCount?: Prisma.SortOrder;
  followingCount?: Prisma.SortOrder;
};

export type MetricsGithubUserStatisticsMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  periodType?: Prisma.SortOrder;
  followersCount?: Prisma.SortOrder;
  followingCount?: Prisma.SortOrder;
  recordedAt?: Prisma.SortOrder;
  createdBy?: Prisma.SortOrder;
  updatedBy?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  tenantId?: Prisma.SortOrder;
};

export type MetricsGithubUserStatisticsMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  periodType?: Prisma.SortOrder;
  followersCount?: Prisma.SortOrder;
  followingCount?: Prisma.SortOrder;
  recordedAt?: Prisma.SortOrder;
  createdBy?: Prisma.SortOrder;
  updatedBy?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  tenantId?: Prisma.SortOrder;
};

export type MetricsGithubUserStatisticsSumOrderByAggregateInput = {
  followersCount?: Prisma.SortOrder;
  followingCount?: Prisma.SortOrder;
};

export type MetricsGithubUserStatisticsCreateNestedManyWithoutMetricsGithubUserInput = {
  create?:
    | Prisma.XOR<
        Prisma.MetricsGithubUserStatisticsCreateWithoutMetricsGithubUserInput,
        Prisma.MetricsGithubUserStatisticsUncheckedCreateWithoutMetricsGithubUserInput
      >
    | Prisma.MetricsGithubUserStatisticsCreateWithoutMetricsGithubUserInput[]
    | Prisma.MetricsGithubUserStatisticsUncheckedCreateWithoutMetricsGithubUserInput[];
  connectOrCreate?:
    | Prisma.MetricsGithubUserStatisticsCreateOrConnectWithoutMetricsGithubUserInput
    | Prisma.MetricsGithubUserStatisticsCreateOrConnectWithoutMetricsGithubUserInput[];
  createMany?: Prisma.MetricsGithubUserStatisticsCreateManyMetricsGithubUserInputEnvelope;
  connect?: Prisma.MetricsGithubUserStatisticsWhereUniqueInput | Prisma.MetricsGithubUserStatisticsWhereUniqueInput[];
};

export type MetricsGithubUserStatisticsUncheckedCreateNestedManyWithoutMetricsGithubUserInput = {
  create?:
    | Prisma.XOR<
        Prisma.MetricsGithubUserStatisticsCreateWithoutMetricsGithubUserInput,
        Prisma.MetricsGithubUserStatisticsUncheckedCreateWithoutMetricsGithubUserInput
      >
    | Prisma.MetricsGithubUserStatisticsCreateWithoutMetricsGithubUserInput[]
    | Prisma.MetricsGithubUserStatisticsUncheckedCreateWithoutMetricsGithubUserInput[];
  connectOrCreate?:
    | Prisma.MetricsGithubUserStatisticsCreateOrConnectWithoutMetricsGithubUserInput
    | Prisma.MetricsGithubUserStatisticsCreateOrConnectWithoutMetricsGithubUserInput[];
  createMany?: Prisma.MetricsGithubUserStatisticsCreateManyMetricsGithubUserInputEnvelope;
  connect?: Prisma.MetricsGithubUserStatisticsWhereUniqueInput | Prisma.MetricsGithubUserStatisticsWhereUniqueInput[];
};

export type MetricsGithubUserStatisticsUpdateManyWithoutMetricsGithubUserNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.MetricsGithubUserStatisticsCreateWithoutMetricsGithubUserInput,
        Prisma.MetricsGithubUserStatisticsUncheckedCreateWithoutMetricsGithubUserInput
      >
    | Prisma.MetricsGithubUserStatisticsCreateWithoutMetricsGithubUserInput[]
    | Prisma.MetricsGithubUserStatisticsUncheckedCreateWithoutMetricsGithubUserInput[];
  connectOrCreate?:
    | Prisma.MetricsGithubUserStatisticsCreateOrConnectWithoutMetricsGithubUserInput
    | Prisma.MetricsGithubUserStatisticsCreateOrConnectWithoutMetricsGithubUserInput[];
  upsert?:
    | Prisma.MetricsGithubUserStatisticsUpsertWithWhereUniqueWithoutMetricsGithubUserInput
    | Prisma.MetricsGithubUserStatisticsUpsertWithWhereUniqueWithoutMetricsGithubUserInput[];
  createMany?: Prisma.MetricsGithubUserStatisticsCreateManyMetricsGithubUserInputEnvelope;
  set?: Prisma.MetricsGithubUserStatisticsWhereUniqueInput | Prisma.MetricsGithubUserStatisticsWhereUniqueInput[];
  disconnect?:
    | Prisma.MetricsGithubUserStatisticsWhereUniqueInput
    | Prisma.MetricsGithubUserStatisticsWhereUniqueInput[];
  delete?: Prisma.MetricsGithubUserStatisticsWhereUniqueInput | Prisma.MetricsGithubUserStatisticsWhereUniqueInput[];
  connect?: Prisma.MetricsGithubUserStatisticsWhereUniqueInput | Prisma.MetricsGithubUserStatisticsWhereUniqueInput[];
  update?:
    | Prisma.MetricsGithubUserStatisticsUpdateWithWhereUniqueWithoutMetricsGithubUserInput
    | Prisma.MetricsGithubUserStatisticsUpdateWithWhereUniqueWithoutMetricsGithubUserInput[];
  updateMany?:
    | Prisma.MetricsGithubUserStatisticsUpdateManyWithWhereWithoutMetricsGithubUserInput
    | Prisma.MetricsGithubUserStatisticsUpdateManyWithWhereWithoutMetricsGithubUserInput[];
  deleteMany?:
    | Prisma.MetricsGithubUserStatisticsScalarWhereInput
    | Prisma.MetricsGithubUserStatisticsScalarWhereInput[];
};

export type MetricsGithubUserStatisticsUncheckedUpdateManyWithoutMetricsGithubUserNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.MetricsGithubUserStatisticsCreateWithoutMetricsGithubUserInput,
        Prisma.MetricsGithubUserStatisticsUncheckedCreateWithoutMetricsGithubUserInput
      >
    | Prisma.MetricsGithubUserStatisticsCreateWithoutMetricsGithubUserInput[]
    | Prisma.MetricsGithubUserStatisticsUncheckedCreateWithoutMetricsGithubUserInput[];
  connectOrCreate?:
    | Prisma.MetricsGithubUserStatisticsCreateOrConnectWithoutMetricsGithubUserInput
    | Prisma.MetricsGithubUserStatisticsCreateOrConnectWithoutMetricsGithubUserInput[];
  upsert?:
    | Prisma.MetricsGithubUserStatisticsUpsertWithWhereUniqueWithoutMetricsGithubUserInput
    | Prisma.MetricsGithubUserStatisticsUpsertWithWhereUniqueWithoutMetricsGithubUserInput[];
  createMany?: Prisma.MetricsGithubUserStatisticsCreateManyMetricsGithubUserInputEnvelope;
  set?: Prisma.MetricsGithubUserStatisticsWhereUniqueInput | Prisma.MetricsGithubUserStatisticsWhereUniqueInput[];
  disconnect?:
    | Prisma.MetricsGithubUserStatisticsWhereUniqueInput
    | Prisma.MetricsGithubUserStatisticsWhereUniqueInput[];
  delete?: Prisma.MetricsGithubUserStatisticsWhereUniqueInput | Prisma.MetricsGithubUserStatisticsWhereUniqueInput[];
  connect?: Prisma.MetricsGithubUserStatisticsWhereUniqueInput | Prisma.MetricsGithubUserStatisticsWhereUniqueInput[];
  update?:
    | Prisma.MetricsGithubUserStatisticsUpdateWithWhereUniqueWithoutMetricsGithubUserInput
    | Prisma.MetricsGithubUserStatisticsUpdateWithWhereUniqueWithoutMetricsGithubUserInput[];
  updateMany?:
    | Prisma.MetricsGithubUserStatisticsUpdateManyWithWhereWithoutMetricsGithubUserInput
    | Prisma.MetricsGithubUserStatisticsUpdateManyWithWhereWithoutMetricsGithubUserInput[];
  deleteMany?:
    | Prisma.MetricsGithubUserStatisticsScalarWhereInput
    | Prisma.MetricsGithubUserStatisticsScalarWhereInput[];
};

export type MetricsGithubUserStatisticsCreateNestedManyWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput =
  {
    create?:
      | Prisma.XOR<
          Prisma.MetricsGithubUserStatisticsCreateWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput,
          Prisma.MetricsGithubUserStatisticsUncheckedCreateWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput
        >
      | Prisma.MetricsGithubUserStatisticsCreateWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput[]
      | Prisma.MetricsGithubUserStatisticsUncheckedCreateWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput[];
    connectOrCreate?:
      | Prisma.MetricsGithubUserStatisticsCreateOrConnectWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput
      | Prisma.MetricsGithubUserStatisticsCreateOrConnectWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput[];
    createMany?: Prisma.MetricsGithubUserStatisticsCreateManyMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInputEnvelope;
    connect?: Prisma.MetricsGithubUserStatisticsWhereUniqueInput | Prisma.MetricsGithubUserStatisticsWhereUniqueInput[];
  };

export type MetricsGithubUserStatisticsCreateNestedManyWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput =
  {
    create?:
      | Prisma.XOR<
          Prisma.MetricsGithubUserStatisticsCreateWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput,
          Prisma.MetricsGithubUserStatisticsUncheckedCreateWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput
        >
      | Prisma.MetricsGithubUserStatisticsCreateWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput[]
      | Prisma.MetricsGithubUserStatisticsUncheckedCreateWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput[];
    connectOrCreate?:
      | Prisma.MetricsGithubUserStatisticsCreateOrConnectWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput
      | Prisma.MetricsGithubUserStatisticsCreateOrConnectWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput[];
    createMany?: Prisma.MetricsGithubUserStatisticsCreateManyMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInputEnvelope;
    connect?: Prisma.MetricsGithubUserStatisticsWhereUniqueInput | Prisma.MetricsGithubUserStatisticsWhereUniqueInput[];
  };

export type MetricsGithubUserStatisticsUncheckedCreateNestedManyWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput =
  {
    create?:
      | Prisma.XOR<
          Prisma.MetricsGithubUserStatisticsCreateWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput,
          Prisma.MetricsGithubUserStatisticsUncheckedCreateWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput
        >
      | Prisma.MetricsGithubUserStatisticsCreateWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput[]
      | Prisma.MetricsGithubUserStatisticsUncheckedCreateWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput[];
    connectOrCreate?:
      | Prisma.MetricsGithubUserStatisticsCreateOrConnectWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput
      | Prisma.MetricsGithubUserStatisticsCreateOrConnectWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput[];
    createMany?: Prisma.MetricsGithubUserStatisticsCreateManyMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInputEnvelope;
    connect?: Prisma.MetricsGithubUserStatisticsWhereUniqueInput | Prisma.MetricsGithubUserStatisticsWhereUniqueInput[];
  };

export type MetricsGithubUserStatisticsUncheckedCreateNestedManyWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput =
  {
    create?:
      | Prisma.XOR<
          Prisma.MetricsGithubUserStatisticsCreateWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput,
          Prisma.MetricsGithubUserStatisticsUncheckedCreateWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput
        >
      | Prisma.MetricsGithubUserStatisticsCreateWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput[]
      | Prisma.MetricsGithubUserStatisticsUncheckedCreateWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput[];
    connectOrCreate?:
      | Prisma.MetricsGithubUserStatisticsCreateOrConnectWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput
      | Prisma.MetricsGithubUserStatisticsCreateOrConnectWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput[];
    createMany?: Prisma.MetricsGithubUserStatisticsCreateManyMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInputEnvelope;
    connect?: Prisma.MetricsGithubUserStatisticsWhereUniqueInput | Prisma.MetricsGithubUserStatisticsWhereUniqueInput[];
  };

export type MetricsGithubUserStatisticsUpdateManyWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserNestedInput =
  {
    create?:
      | Prisma.XOR<
          Prisma.MetricsGithubUserStatisticsCreateWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput,
          Prisma.MetricsGithubUserStatisticsUncheckedCreateWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput
        >
      | Prisma.MetricsGithubUserStatisticsCreateWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput[]
      | Prisma.MetricsGithubUserStatisticsUncheckedCreateWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput[];
    connectOrCreate?:
      | Prisma.MetricsGithubUserStatisticsCreateOrConnectWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput
      | Prisma.MetricsGithubUserStatisticsCreateOrConnectWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput[];
    upsert?:
      | Prisma.MetricsGithubUserStatisticsUpsertWithWhereUniqueWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput
      | Prisma.MetricsGithubUserStatisticsUpsertWithWhereUniqueWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput[];
    createMany?: Prisma.MetricsGithubUserStatisticsCreateManyMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInputEnvelope;
    set?: Prisma.MetricsGithubUserStatisticsWhereUniqueInput | Prisma.MetricsGithubUserStatisticsWhereUniqueInput[];
    disconnect?:
      | Prisma.MetricsGithubUserStatisticsWhereUniqueInput
      | Prisma.MetricsGithubUserStatisticsWhereUniqueInput[];
    delete?: Prisma.MetricsGithubUserStatisticsWhereUniqueInput | Prisma.MetricsGithubUserStatisticsWhereUniqueInput[];
    connect?: Prisma.MetricsGithubUserStatisticsWhereUniqueInput | Prisma.MetricsGithubUserStatisticsWhereUniqueInput[];
    update?:
      | Prisma.MetricsGithubUserStatisticsUpdateWithWhereUniqueWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput
      | Prisma.MetricsGithubUserStatisticsUpdateWithWhereUniqueWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput[];
    updateMany?:
      | Prisma.MetricsGithubUserStatisticsUpdateManyWithWhereWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput
      | Prisma.MetricsGithubUserStatisticsUpdateManyWithWhereWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput[];
    deleteMany?:
      | Prisma.MetricsGithubUserStatisticsScalarWhereInput
      | Prisma.MetricsGithubUserStatisticsScalarWhereInput[];
  };

export type MetricsGithubUserStatisticsUpdateManyWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserNestedInput =
  {
    create?:
      | Prisma.XOR<
          Prisma.MetricsGithubUserStatisticsCreateWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput,
          Prisma.MetricsGithubUserStatisticsUncheckedCreateWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput
        >
      | Prisma.MetricsGithubUserStatisticsCreateWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput[]
      | Prisma.MetricsGithubUserStatisticsUncheckedCreateWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput[];
    connectOrCreate?:
      | Prisma.MetricsGithubUserStatisticsCreateOrConnectWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput
      | Prisma.MetricsGithubUserStatisticsCreateOrConnectWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput[];
    upsert?:
      | Prisma.MetricsGithubUserStatisticsUpsertWithWhereUniqueWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput
      | Prisma.MetricsGithubUserStatisticsUpsertWithWhereUniqueWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput[];
    createMany?: Prisma.MetricsGithubUserStatisticsCreateManyMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInputEnvelope;
    set?: Prisma.MetricsGithubUserStatisticsWhereUniqueInput | Prisma.MetricsGithubUserStatisticsWhereUniqueInput[];
    disconnect?:
      | Prisma.MetricsGithubUserStatisticsWhereUniqueInput
      | Prisma.MetricsGithubUserStatisticsWhereUniqueInput[];
    delete?: Prisma.MetricsGithubUserStatisticsWhereUniqueInput | Prisma.MetricsGithubUserStatisticsWhereUniqueInput[];
    connect?: Prisma.MetricsGithubUserStatisticsWhereUniqueInput | Prisma.MetricsGithubUserStatisticsWhereUniqueInput[];
    update?:
      | Prisma.MetricsGithubUserStatisticsUpdateWithWhereUniqueWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput
      | Prisma.MetricsGithubUserStatisticsUpdateWithWhereUniqueWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput[];
    updateMany?:
      | Prisma.MetricsGithubUserStatisticsUpdateManyWithWhereWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput
      | Prisma.MetricsGithubUserStatisticsUpdateManyWithWhereWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput[];
    deleteMany?:
      | Prisma.MetricsGithubUserStatisticsScalarWhereInput
      | Prisma.MetricsGithubUserStatisticsScalarWhereInput[];
  };

export type MetricsGithubUserStatisticsUncheckedUpdateManyWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserNestedInput =
  {
    create?:
      | Prisma.XOR<
          Prisma.MetricsGithubUserStatisticsCreateWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput,
          Prisma.MetricsGithubUserStatisticsUncheckedCreateWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput
        >
      | Prisma.MetricsGithubUserStatisticsCreateWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput[]
      | Prisma.MetricsGithubUserStatisticsUncheckedCreateWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput[];
    connectOrCreate?:
      | Prisma.MetricsGithubUserStatisticsCreateOrConnectWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput
      | Prisma.MetricsGithubUserStatisticsCreateOrConnectWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput[];
    upsert?:
      | Prisma.MetricsGithubUserStatisticsUpsertWithWhereUniqueWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput
      | Prisma.MetricsGithubUserStatisticsUpsertWithWhereUniqueWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput[];
    createMany?: Prisma.MetricsGithubUserStatisticsCreateManyMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInputEnvelope;
    set?: Prisma.MetricsGithubUserStatisticsWhereUniqueInput | Prisma.MetricsGithubUserStatisticsWhereUniqueInput[];
    disconnect?:
      | Prisma.MetricsGithubUserStatisticsWhereUniqueInput
      | Prisma.MetricsGithubUserStatisticsWhereUniqueInput[];
    delete?: Prisma.MetricsGithubUserStatisticsWhereUniqueInput | Prisma.MetricsGithubUserStatisticsWhereUniqueInput[];
    connect?: Prisma.MetricsGithubUserStatisticsWhereUniqueInput | Prisma.MetricsGithubUserStatisticsWhereUniqueInput[];
    update?:
      | Prisma.MetricsGithubUserStatisticsUpdateWithWhereUniqueWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput
      | Prisma.MetricsGithubUserStatisticsUpdateWithWhereUniqueWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput[];
    updateMany?:
      | Prisma.MetricsGithubUserStatisticsUpdateManyWithWhereWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput
      | Prisma.MetricsGithubUserStatisticsUpdateManyWithWhereWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput[];
    deleteMany?:
      | Prisma.MetricsGithubUserStatisticsScalarWhereInput
      | Prisma.MetricsGithubUserStatisticsScalarWhereInput[];
  };

export type MetricsGithubUserStatisticsUncheckedUpdateManyWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserNestedInput =
  {
    create?:
      | Prisma.XOR<
          Prisma.MetricsGithubUserStatisticsCreateWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput,
          Prisma.MetricsGithubUserStatisticsUncheckedCreateWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput
        >
      | Prisma.MetricsGithubUserStatisticsCreateWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput[]
      | Prisma.MetricsGithubUserStatisticsUncheckedCreateWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput[];
    connectOrCreate?:
      | Prisma.MetricsGithubUserStatisticsCreateOrConnectWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput
      | Prisma.MetricsGithubUserStatisticsCreateOrConnectWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput[];
    upsert?:
      | Prisma.MetricsGithubUserStatisticsUpsertWithWhereUniqueWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput
      | Prisma.MetricsGithubUserStatisticsUpsertWithWhereUniqueWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput[];
    createMany?: Prisma.MetricsGithubUserStatisticsCreateManyMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInputEnvelope;
    set?: Prisma.MetricsGithubUserStatisticsWhereUniqueInput | Prisma.MetricsGithubUserStatisticsWhereUniqueInput[];
    disconnect?:
      | Prisma.MetricsGithubUserStatisticsWhereUniqueInput
      | Prisma.MetricsGithubUserStatisticsWhereUniqueInput[];
    delete?: Prisma.MetricsGithubUserStatisticsWhereUniqueInput | Prisma.MetricsGithubUserStatisticsWhereUniqueInput[];
    connect?: Prisma.MetricsGithubUserStatisticsWhereUniqueInput | Prisma.MetricsGithubUserStatisticsWhereUniqueInput[];
    update?:
      | Prisma.MetricsGithubUserStatisticsUpdateWithWhereUniqueWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput
      | Prisma.MetricsGithubUserStatisticsUpdateWithWhereUniqueWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput[];
    updateMany?:
      | Prisma.MetricsGithubUserStatisticsUpdateManyWithWhereWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput
      | Prisma.MetricsGithubUserStatisticsUpdateManyWithWhereWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput[];
    deleteMany?:
      | Prisma.MetricsGithubUserStatisticsScalarWhereInput
      | Prisma.MetricsGithubUserStatisticsScalarWhereInput[];
  };

export type MetricsGithubUserStatisticsCreateWithoutMetricsGithubUserInput = {
  id?: string;
  periodType: string;
  followersCount?: number | null;
  followingCount?: number | null;
  recordedAt: Date | string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  tenantId: string;
  MetricsUser_MetricsGithubUserStatistics_createdByToMetricsUser: Prisma.MetricsUserCreateNestedOneWithoutMetricsGithubUserStatistics_MetricsGithubUserStatistics_createdByToMetricsUserInput;
  MetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUser: Prisma.MetricsUserCreateNestedOneWithoutMetricsGithubUserStatistics_MetricsGithubUserStatistics_updatedByToMetricsUserInput;
};

export type MetricsGithubUserStatisticsUncheckedCreateWithoutMetricsGithubUserInput = {
  id?: string;
  periodType: string;
  followersCount?: number | null;
  followingCount?: number | null;
  recordedAt: Date | string;
  createdBy: string;
  updatedBy: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  tenantId: string;
};

export type MetricsGithubUserStatisticsCreateOrConnectWithoutMetricsGithubUserInput = {
  where: Prisma.MetricsGithubUserStatisticsWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.MetricsGithubUserStatisticsCreateWithoutMetricsGithubUserInput,
    Prisma.MetricsGithubUserStatisticsUncheckedCreateWithoutMetricsGithubUserInput
  >;
};

export type MetricsGithubUserStatisticsCreateManyMetricsGithubUserInputEnvelope = {
  data:
    | Prisma.MetricsGithubUserStatisticsCreateManyMetricsGithubUserInput
    | Prisma.MetricsGithubUserStatisticsCreateManyMetricsGithubUserInput[];
  skipDuplicates?: boolean;
};

export type MetricsGithubUserStatisticsUpsertWithWhereUniqueWithoutMetricsGithubUserInput = {
  where: Prisma.MetricsGithubUserStatisticsWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.MetricsGithubUserStatisticsUpdateWithoutMetricsGithubUserInput,
    Prisma.MetricsGithubUserStatisticsUncheckedUpdateWithoutMetricsGithubUserInput
  >;
  create: Prisma.XOR<
    Prisma.MetricsGithubUserStatisticsCreateWithoutMetricsGithubUserInput,
    Prisma.MetricsGithubUserStatisticsUncheckedCreateWithoutMetricsGithubUserInput
  >;
};

export type MetricsGithubUserStatisticsUpdateWithWhereUniqueWithoutMetricsGithubUserInput = {
  where: Prisma.MetricsGithubUserStatisticsWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.MetricsGithubUserStatisticsUpdateWithoutMetricsGithubUserInput,
    Prisma.MetricsGithubUserStatisticsUncheckedUpdateWithoutMetricsGithubUserInput
  >;
};

export type MetricsGithubUserStatisticsUpdateManyWithWhereWithoutMetricsGithubUserInput = {
  where: Prisma.MetricsGithubUserStatisticsScalarWhereInput;
  data: Prisma.XOR<
    Prisma.MetricsGithubUserStatisticsUpdateManyMutationInput,
    Prisma.MetricsGithubUserStatisticsUncheckedUpdateManyWithoutMetricsGithubUserInput
  >;
};

export type MetricsGithubUserStatisticsScalarWhereInput = {
  AND?: Prisma.MetricsGithubUserStatisticsScalarWhereInput | Prisma.MetricsGithubUserStatisticsScalarWhereInput[];
  OR?: Prisma.MetricsGithubUserStatisticsScalarWhereInput[];
  NOT?: Prisma.MetricsGithubUserStatisticsScalarWhereInput | Prisma.MetricsGithubUserStatisticsScalarWhereInput[];
  id?: Prisma.UuidFilter<'MetricsGithubUserStatistics'> | string;
  userId?: Prisma.UuidFilter<'MetricsGithubUserStatistics'> | string;
  periodType?: Prisma.StringFilter<'MetricsGithubUserStatistics'> | string;
  followersCount?: Prisma.IntNullableFilter<'MetricsGithubUserStatistics'> | number | null;
  followingCount?: Prisma.IntNullableFilter<'MetricsGithubUserStatistics'> | number | null;
  recordedAt?: Prisma.DateTimeFilter<'MetricsGithubUserStatistics'> | Date | string;
  createdBy?: Prisma.UuidFilter<'MetricsGithubUserStatistics'> | string;
  updatedBy?: Prisma.UuidFilter<'MetricsGithubUserStatistics'> | string;
  createdAt?: Prisma.DateTimeFilter<'MetricsGithubUserStatistics'> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<'MetricsGithubUserStatistics'> | Date | string;
  tenantId?: Prisma.UuidFilter<'MetricsGithubUserStatistics'> | string;
};

export type MetricsGithubUserStatisticsCreateWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput =
  {
    id?: string;
    periodType: string;
    followersCount?: number | null;
    followingCount?: number | null;
    recordedAt: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    tenantId: string;
    MetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUser: Prisma.MetricsUserCreateNestedOneWithoutMetricsGithubUserStatistics_MetricsGithubUserStatistics_updatedByToMetricsUserInput;
    MetricsGithubUser: Prisma.MetricsGithubUserCreateNestedOneWithoutMetricsGithubUserStatisticsInput;
  };

export type MetricsGithubUserStatisticsUncheckedCreateWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput =
  {
    id?: string;
    userId: string;
    periodType: string;
    followersCount?: number | null;
    followingCount?: number | null;
    recordedAt: Date | string;
    updatedBy: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    tenantId: string;
  };

export type MetricsGithubUserStatisticsCreateOrConnectWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput =
  {
    where: Prisma.MetricsGithubUserStatisticsWhereUniqueInput;
    create: Prisma.XOR<
      Prisma.MetricsGithubUserStatisticsCreateWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput,
      Prisma.MetricsGithubUserStatisticsUncheckedCreateWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput
    >;
  };

export type MetricsGithubUserStatisticsCreateManyMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInputEnvelope =
  {
    data:
      | Prisma.MetricsGithubUserStatisticsCreateManyMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput
      | Prisma.MetricsGithubUserStatisticsCreateManyMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput[];
    skipDuplicates?: boolean;
  };

export type MetricsGithubUserStatisticsCreateWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput =
  {
    id?: string;
    periodType: string;
    followersCount?: number | null;
    followingCount?: number | null;
    recordedAt: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    tenantId: string;
    MetricsUser_MetricsGithubUserStatistics_createdByToMetricsUser: Prisma.MetricsUserCreateNestedOneWithoutMetricsGithubUserStatistics_MetricsGithubUserStatistics_createdByToMetricsUserInput;
    MetricsGithubUser: Prisma.MetricsGithubUserCreateNestedOneWithoutMetricsGithubUserStatisticsInput;
  };

export type MetricsGithubUserStatisticsUncheckedCreateWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput =
  {
    id?: string;
    userId: string;
    periodType: string;
    followersCount?: number | null;
    followingCount?: number | null;
    recordedAt: Date | string;
    createdBy: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    tenantId: string;
  };

export type MetricsGithubUserStatisticsCreateOrConnectWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput =
  {
    where: Prisma.MetricsGithubUserStatisticsWhereUniqueInput;
    create: Prisma.XOR<
      Prisma.MetricsGithubUserStatisticsCreateWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput,
      Prisma.MetricsGithubUserStatisticsUncheckedCreateWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput
    >;
  };

export type MetricsGithubUserStatisticsCreateManyMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInputEnvelope =
  {
    data:
      | Prisma.MetricsGithubUserStatisticsCreateManyMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput
      | Prisma.MetricsGithubUserStatisticsCreateManyMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput[];
    skipDuplicates?: boolean;
  };

export type MetricsGithubUserStatisticsUpsertWithWhereUniqueWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput =
  {
    where: Prisma.MetricsGithubUserStatisticsWhereUniqueInput;
    update: Prisma.XOR<
      Prisma.MetricsGithubUserStatisticsUpdateWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput,
      Prisma.MetricsGithubUserStatisticsUncheckedUpdateWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput
    >;
    create: Prisma.XOR<
      Prisma.MetricsGithubUserStatisticsCreateWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput,
      Prisma.MetricsGithubUserStatisticsUncheckedCreateWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput
    >;
  };

export type MetricsGithubUserStatisticsUpdateWithWhereUniqueWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput =
  {
    where: Prisma.MetricsGithubUserStatisticsWhereUniqueInput;
    data: Prisma.XOR<
      Prisma.MetricsGithubUserStatisticsUpdateWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput,
      Prisma.MetricsGithubUserStatisticsUncheckedUpdateWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput
    >;
  };

export type MetricsGithubUserStatisticsUpdateManyWithWhereWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput =
  {
    where: Prisma.MetricsGithubUserStatisticsScalarWhereInput;
    data: Prisma.XOR<
      Prisma.MetricsGithubUserStatisticsUpdateManyMutationInput,
      Prisma.MetricsGithubUserStatisticsUncheckedUpdateManyWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput
    >;
  };

export type MetricsGithubUserStatisticsUpsertWithWhereUniqueWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput =
  {
    where: Prisma.MetricsGithubUserStatisticsWhereUniqueInput;
    update: Prisma.XOR<
      Prisma.MetricsGithubUserStatisticsUpdateWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput,
      Prisma.MetricsGithubUserStatisticsUncheckedUpdateWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput
    >;
    create: Prisma.XOR<
      Prisma.MetricsGithubUserStatisticsCreateWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput,
      Prisma.MetricsGithubUserStatisticsUncheckedCreateWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput
    >;
  };

export type MetricsGithubUserStatisticsUpdateWithWhereUniqueWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput =
  {
    where: Prisma.MetricsGithubUserStatisticsWhereUniqueInput;
    data: Prisma.XOR<
      Prisma.MetricsGithubUserStatisticsUpdateWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput,
      Prisma.MetricsGithubUserStatisticsUncheckedUpdateWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput
    >;
  };

export type MetricsGithubUserStatisticsUpdateManyWithWhereWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput =
  {
    where: Prisma.MetricsGithubUserStatisticsScalarWhereInput;
    data: Prisma.XOR<
      Prisma.MetricsGithubUserStatisticsUpdateManyMutationInput,
      Prisma.MetricsGithubUserStatisticsUncheckedUpdateManyWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput
    >;
  };

export type MetricsGithubUserStatisticsCreateManyMetricsGithubUserInput = {
  id?: string;
  periodType: string;
  followersCount?: number | null;
  followingCount?: number | null;
  recordedAt: Date | string;
  createdBy: string;
  updatedBy: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  tenantId: string;
};

export type MetricsGithubUserStatisticsUpdateWithoutMetricsGithubUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  periodType?: Prisma.StringFieldUpdateOperationsInput | string;
  followersCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  followingCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  recordedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  tenantId?: Prisma.StringFieldUpdateOperationsInput | string;
  MetricsUser_MetricsGithubUserStatistics_createdByToMetricsUser?: Prisma.MetricsUserUpdateOneRequiredWithoutMetricsGithubUserStatistics_MetricsGithubUserStatistics_createdByToMetricsUserNestedInput;
  MetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUser?: Prisma.MetricsUserUpdateOneRequiredWithoutMetricsGithubUserStatistics_MetricsGithubUserStatistics_updatedByToMetricsUserNestedInput;
};

export type MetricsGithubUserStatisticsUncheckedUpdateWithoutMetricsGithubUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  periodType?: Prisma.StringFieldUpdateOperationsInput | string;
  followersCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  followingCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  recordedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdBy?: Prisma.StringFieldUpdateOperationsInput | string;
  updatedBy?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  tenantId?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type MetricsGithubUserStatisticsUncheckedUpdateManyWithoutMetricsGithubUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  periodType?: Prisma.StringFieldUpdateOperationsInput | string;
  followersCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  followingCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  recordedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdBy?: Prisma.StringFieldUpdateOperationsInput | string;
  updatedBy?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  tenantId?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type MetricsGithubUserStatisticsCreateManyMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput = {
  id?: string;
  userId: string;
  periodType: string;
  followersCount?: number | null;
  followingCount?: number | null;
  recordedAt: Date | string;
  updatedBy: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  tenantId: string;
};

export type MetricsGithubUserStatisticsCreateManyMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput = {
  id?: string;
  userId: string;
  periodType: string;
  followersCount?: number | null;
  followingCount?: number | null;
  recordedAt: Date | string;
  createdBy: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  tenantId: string;
};

export type MetricsGithubUserStatisticsUpdateWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput =
  {
    id?: Prisma.StringFieldUpdateOperationsInput | string;
    periodType?: Prisma.StringFieldUpdateOperationsInput | string;
    followersCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
    followingCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
    recordedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
    createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
    updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
    tenantId?: Prisma.StringFieldUpdateOperationsInput | string;
    MetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUser?: Prisma.MetricsUserUpdateOneRequiredWithoutMetricsGithubUserStatistics_MetricsGithubUserStatistics_updatedByToMetricsUserNestedInput;
    MetricsGithubUser?: Prisma.MetricsGithubUserUpdateOneRequiredWithoutMetricsGithubUserStatisticsNestedInput;
  };

export type MetricsGithubUserStatisticsUncheckedUpdateWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput =
  {
    id?: Prisma.StringFieldUpdateOperationsInput | string;
    userId?: Prisma.StringFieldUpdateOperationsInput | string;
    periodType?: Prisma.StringFieldUpdateOperationsInput | string;
    followersCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
    followingCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
    recordedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
    updatedBy?: Prisma.StringFieldUpdateOperationsInput | string;
    createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
    updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
    tenantId?: Prisma.StringFieldUpdateOperationsInput | string;
  };

export type MetricsGithubUserStatisticsUncheckedUpdateManyWithoutMetricsUser_MetricsGithubUserStatistics_createdByToMetricsUserInput =
  {
    id?: Prisma.StringFieldUpdateOperationsInput | string;
    userId?: Prisma.StringFieldUpdateOperationsInput | string;
    periodType?: Prisma.StringFieldUpdateOperationsInput | string;
    followersCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
    followingCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
    recordedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
    updatedBy?: Prisma.StringFieldUpdateOperationsInput | string;
    createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
    updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
    tenantId?: Prisma.StringFieldUpdateOperationsInput | string;
  };

export type MetricsGithubUserStatisticsUpdateWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput =
  {
    id?: Prisma.StringFieldUpdateOperationsInput | string;
    periodType?: Prisma.StringFieldUpdateOperationsInput | string;
    followersCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
    followingCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
    recordedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
    createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
    updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
    tenantId?: Prisma.StringFieldUpdateOperationsInput | string;
    MetricsUser_MetricsGithubUserStatistics_createdByToMetricsUser?: Prisma.MetricsUserUpdateOneRequiredWithoutMetricsGithubUserStatistics_MetricsGithubUserStatistics_createdByToMetricsUserNestedInput;
    MetricsGithubUser?: Prisma.MetricsGithubUserUpdateOneRequiredWithoutMetricsGithubUserStatisticsNestedInput;
  };

export type MetricsGithubUserStatisticsUncheckedUpdateWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput =
  {
    id?: Prisma.StringFieldUpdateOperationsInput | string;
    userId?: Prisma.StringFieldUpdateOperationsInput | string;
    periodType?: Prisma.StringFieldUpdateOperationsInput | string;
    followersCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
    followingCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
    recordedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
    createdBy?: Prisma.StringFieldUpdateOperationsInput | string;
    createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
    updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
    tenantId?: Prisma.StringFieldUpdateOperationsInput | string;
  };

export type MetricsGithubUserStatisticsUncheckedUpdateManyWithoutMetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUserInput =
  {
    id?: Prisma.StringFieldUpdateOperationsInput | string;
    userId?: Prisma.StringFieldUpdateOperationsInput | string;
    periodType?: Prisma.StringFieldUpdateOperationsInput | string;
    followersCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
    followingCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
    recordedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
    createdBy?: Prisma.StringFieldUpdateOperationsInput | string;
    createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
    updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
    tenantId?: Prisma.StringFieldUpdateOperationsInput | string;
  };

export type MetricsGithubUserStatisticsSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    userId?: boolean;
    periodType?: boolean;
    followersCount?: boolean;
    followingCount?: boolean;
    recordedAt?: boolean;
    createdBy?: boolean;
    updatedBy?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    tenantId?: boolean;
    MetricsUser_MetricsGithubUserStatistics_createdByToMetricsUser?: boolean | Prisma.MetricsUserDefaultArgs<ExtArgs>;
    MetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUser?: boolean | Prisma.MetricsUserDefaultArgs<ExtArgs>;
    MetricsGithubUser?: boolean | Prisma.MetricsGithubUserDefaultArgs<ExtArgs>;
  },
  ExtArgs['result']['metricsGithubUserStatistics']
>;

export type MetricsGithubUserStatisticsSelectCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    userId?: boolean;
    periodType?: boolean;
    followersCount?: boolean;
    followingCount?: boolean;
    recordedAt?: boolean;
    createdBy?: boolean;
    updatedBy?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    tenantId?: boolean;
    MetricsUser_MetricsGithubUserStatistics_createdByToMetricsUser?: boolean | Prisma.MetricsUserDefaultArgs<ExtArgs>;
    MetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUser?: boolean | Prisma.MetricsUserDefaultArgs<ExtArgs>;
    MetricsGithubUser?: boolean | Prisma.MetricsGithubUserDefaultArgs<ExtArgs>;
  },
  ExtArgs['result']['metricsGithubUserStatistics']
>;

export type MetricsGithubUserStatisticsSelectUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    userId?: boolean;
    periodType?: boolean;
    followersCount?: boolean;
    followingCount?: boolean;
    recordedAt?: boolean;
    createdBy?: boolean;
    updatedBy?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    tenantId?: boolean;
    MetricsUser_MetricsGithubUserStatistics_createdByToMetricsUser?: boolean | Prisma.MetricsUserDefaultArgs<ExtArgs>;
    MetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUser?: boolean | Prisma.MetricsUserDefaultArgs<ExtArgs>;
    MetricsGithubUser?: boolean | Prisma.MetricsGithubUserDefaultArgs<ExtArgs>;
  },
  ExtArgs['result']['metricsGithubUserStatistics']
>;

export type MetricsGithubUserStatisticsSelectScalar = {
  id?: boolean;
  userId?: boolean;
  periodType?: boolean;
  followersCount?: boolean;
  followingCount?: boolean;
  recordedAt?: boolean;
  createdBy?: boolean;
  updatedBy?: boolean;
  createdAt?: boolean;
  updatedAt?: boolean;
  tenantId?: boolean;
};

export type MetricsGithubUserStatisticsOmit<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  | 'id'
  | 'userId'
  | 'periodType'
  | 'followersCount'
  | 'followingCount'
  | 'recordedAt'
  | 'createdBy'
  | 'updatedBy'
  | 'createdAt'
  | 'updatedAt'
  | 'tenantId',
  ExtArgs['result']['metricsGithubUserStatistics']
>;
export type MetricsGithubUserStatisticsInclude<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  MetricsUser_MetricsGithubUserStatistics_createdByToMetricsUser?: boolean | Prisma.MetricsUserDefaultArgs<ExtArgs>;
  MetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUser?: boolean | Prisma.MetricsUserDefaultArgs<ExtArgs>;
  MetricsGithubUser?: boolean | Prisma.MetricsGithubUserDefaultArgs<ExtArgs>;
};
export type MetricsGithubUserStatisticsIncludeCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  MetricsUser_MetricsGithubUserStatistics_createdByToMetricsUser?: boolean | Prisma.MetricsUserDefaultArgs<ExtArgs>;
  MetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUser?: boolean | Prisma.MetricsUserDefaultArgs<ExtArgs>;
  MetricsGithubUser?: boolean | Prisma.MetricsGithubUserDefaultArgs<ExtArgs>;
};
export type MetricsGithubUserStatisticsIncludeUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  MetricsUser_MetricsGithubUserStatistics_createdByToMetricsUser?: boolean | Prisma.MetricsUserDefaultArgs<ExtArgs>;
  MetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUser?: boolean | Prisma.MetricsUserDefaultArgs<ExtArgs>;
  MetricsGithubUser?: boolean | Prisma.MetricsGithubUserDefaultArgs<ExtArgs>;
};

export type $MetricsGithubUserStatisticsPayload<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: 'MetricsGithubUserStatistics';
  objects: {
    MetricsUser_MetricsGithubUserStatistics_createdByToMetricsUser: Prisma.$MetricsUserPayload<ExtArgs>;
    MetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUser: Prisma.$MetricsUserPayload<ExtArgs>;
    MetricsGithubUser: Prisma.$MetricsGithubUserPayload<ExtArgs>;
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string;
      userId: string;
      periodType: string;
      followersCount: number | null;
      followingCount: number | null;
      recordedAt: Date;
      createdBy: string;
      updatedBy: string;
      createdAt: Date;
      updatedAt: Date;
      tenantId: string;
    },
    ExtArgs['result']['metricsGithubUserStatistics']
  >;
  composites: {};
};

export type MetricsGithubUserStatisticsGetPayload<
  S extends boolean | null | undefined | MetricsGithubUserStatisticsDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$MetricsGithubUserStatisticsPayload, S>;

export type MetricsGithubUserStatisticsCountArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<MetricsGithubUserStatisticsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
  select?: MetricsGithubUserStatisticsCountAggregateInputType | true;
};

export interface MetricsGithubUserStatisticsDelegate<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>['model']['MetricsGithubUserStatistics'];
    meta: { name: 'MetricsGithubUserStatistics' };
  };
  /**
   * Find zero or one MetricsGithubUserStatistics that matches the filter.
   * @param {MetricsGithubUserStatisticsFindUniqueArgs} args - Arguments to find a MetricsGithubUserStatistics
   * @example
   * // Get one MetricsGithubUserStatistics
   * const metricsGithubUserStatistics = await prisma.metricsGithubUserStatistics.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends MetricsGithubUserStatisticsFindUniqueArgs>(
    args: Prisma.SelectSubset<T, MetricsGithubUserStatisticsFindUniqueArgs<ExtArgs>>,
  ): Prisma.Prisma__MetricsGithubUserStatisticsClient<
    runtime.Types.Result.GetResult<
      Prisma.$MetricsGithubUserStatisticsPayload<ExtArgs>,
      T,
      'findUnique',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one MetricsGithubUserStatistics that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {MetricsGithubUserStatisticsFindUniqueOrThrowArgs} args - Arguments to find a MetricsGithubUserStatistics
   * @example
   * // Get one MetricsGithubUserStatistics
   * const metricsGithubUserStatistics = await prisma.metricsGithubUserStatistics.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends MetricsGithubUserStatisticsFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, MetricsGithubUserStatisticsFindUniqueOrThrowArgs<ExtArgs>>,
  ): Prisma.Prisma__MetricsGithubUserStatisticsClient<
    runtime.Types.Result.GetResult<
      Prisma.$MetricsGithubUserStatisticsPayload<ExtArgs>,
      T,
      'findUniqueOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first MetricsGithubUserStatistics that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MetricsGithubUserStatisticsFindFirstArgs} args - Arguments to find a MetricsGithubUserStatistics
   * @example
   * // Get one MetricsGithubUserStatistics
   * const metricsGithubUserStatistics = await prisma.metricsGithubUserStatistics.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends MetricsGithubUserStatisticsFindFirstArgs>(
    args?: Prisma.SelectSubset<T, MetricsGithubUserStatisticsFindFirstArgs<ExtArgs>>,
  ): Prisma.Prisma__MetricsGithubUserStatisticsClient<
    runtime.Types.Result.GetResult<
      Prisma.$MetricsGithubUserStatisticsPayload<ExtArgs>,
      T,
      'findFirst',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first MetricsGithubUserStatistics that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MetricsGithubUserStatisticsFindFirstOrThrowArgs} args - Arguments to find a MetricsGithubUserStatistics
   * @example
   * // Get one MetricsGithubUserStatistics
   * const metricsGithubUserStatistics = await prisma.metricsGithubUserStatistics.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends MetricsGithubUserStatisticsFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, MetricsGithubUserStatisticsFindFirstOrThrowArgs<ExtArgs>>,
  ): Prisma.Prisma__MetricsGithubUserStatisticsClient<
    runtime.Types.Result.GetResult<
      Prisma.$MetricsGithubUserStatisticsPayload<ExtArgs>,
      T,
      'findFirstOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more MetricsGithubUserStatistics that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MetricsGithubUserStatisticsFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all MetricsGithubUserStatistics
   * const metricsGithubUserStatistics = await prisma.metricsGithubUserStatistics.findMany()
   *
   * // Get first 10 MetricsGithubUserStatistics
   * const metricsGithubUserStatistics = await prisma.metricsGithubUserStatistics.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const metricsGithubUserStatisticsWithIdOnly = await prisma.metricsGithubUserStatistics.findMany({ select: { id: true } })
   *
   */
  findMany<T extends MetricsGithubUserStatisticsFindManyArgs>(
    args?: Prisma.SelectSubset<T, MetricsGithubUserStatisticsFindManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$MetricsGithubUserStatisticsPayload<ExtArgs>,
      T,
      'findMany',
      GlobalOmitOptions
    >
  >;

  /**
   * Create a MetricsGithubUserStatistics.
   * @param {MetricsGithubUserStatisticsCreateArgs} args - Arguments to create a MetricsGithubUserStatistics.
   * @example
   * // Create one MetricsGithubUserStatistics
   * const MetricsGithubUserStatistics = await prisma.metricsGithubUserStatistics.create({
   *   data: {
   *     // ... data to create a MetricsGithubUserStatistics
   *   }
   * })
   *
   */
  create<T extends MetricsGithubUserStatisticsCreateArgs>(
    args: Prisma.SelectSubset<T, MetricsGithubUserStatisticsCreateArgs<ExtArgs>>,
  ): Prisma.Prisma__MetricsGithubUserStatisticsClient<
    runtime.Types.Result.GetResult<Prisma.$MetricsGithubUserStatisticsPayload<ExtArgs>, T, 'create', GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many MetricsGithubUserStatistics.
   * @param {MetricsGithubUserStatisticsCreateManyArgs} args - Arguments to create many MetricsGithubUserStatistics.
   * @example
   * // Create many MetricsGithubUserStatistics
   * const metricsGithubUserStatistics = await prisma.metricsGithubUserStatistics.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends MetricsGithubUserStatisticsCreateManyArgs>(
    args?: Prisma.SelectSubset<T, MetricsGithubUserStatisticsCreateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many MetricsGithubUserStatistics and returns the data saved in the database.
   * @param {MetricsGithubUserStatisticsCreateManyAndReturnArgs} args - Arguments to create many MetricsGithubUserStatistics.
   * @example
   * // Create many MetricsGithubUserStatistics
   * const metricsGithubUserStatistics = await prisma.metricsGithubUserStatistics.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many MetricsGithubUserStatistics and only return the `id`
   * const metricsGithubUserStatisticsWithIdOnly = await prisma.metricsGithubUserStatistics.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends MetricsGithubUserStatisticsCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, MetricsGithubUserStatisticsCreateManyAndReturnArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$MetricsGithubUserStatisticsPayload<ExtArgs>,
      T,
      'createManyAndReturn',
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a MetricsGithubUserStatistics.
   * @param {MetricsGithubUserStatisticsDeleteArgs} args - Arguments to delete one MetricsGithubUserStatistics.
   * @example
   * // Delete one MetricsGithubUserStatistics
   * const MetricsGithubUserStatistics = await prisma.metricsGithubUserStatistics.delete({
   *   where: {
   *     // ... filter to delete one MetricsGithubUserStatistics
   *   }
   * })
   *
   */
  delete<T extends MetricsGithubUserStatisticsDeleteArgs>(
    args: Prisma.SelectSubset<T, MetricsGithubUserStatisticsDeleteArgs<ExtArgs>>,
  ): Prisma.Prisma__MetricsGithubUserStatisticsClient<
    runtime.Types.Result.GetResult<Prisma.$MetricsGithubUserStatisticsPayload<ExtArgs>, T, 'delete', GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one MetricsGithubUserStatistics.
   * @param {MetricsGithubUserStatisticsUpdateArgs} args - Arguments to update one MetricsGithubUserStatistics.
   * @example
   * // Update one MetricsGithubUserStatistics
   * const metricsGithubUserStatistics = await prisma.metricsGithubUserStatistics.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends MetricsGithubUserStatisticsUpdateArgs>(
    args: Prisma.SelectSubset<T, MetricsGithubUserStatisticsUpdateArgs<ExtArgs>>,
  ): Prisma.Prisma__MetricsGithubUserStatisticsClient<
    runtime.Types.Result.GetResult<Prisma.$MetricsGithubUserStatisticsPayload<ExtArgs>, T, 'update', GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more MetricsGithubUserStatistics.
   * @param {MetricsGithubUserStatisticsDeleteManyArgs} args - Arguments to filter MetricsGithubUserStatistics to delete.
   * @example
   * // Delete a few MetricsGithubUserStatistics
   * const { count } = await prisma.metricsGithubUserStatistics.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends MetricsGithubUserStatisticsDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, MetricsGithubUserStatisticsDeleteManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more MetricsGithubUserStatistics.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MetricsGithubUserStatisticsUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many MetricsGithubUserStatistics
   * const metricsGithubUserStatistics = await prisma.metricsGithubUserStatistics.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends MetricsGithubUserStatisticsUpdateManyArgs>(
    args: Prisma.SelectSubset<T, MetricsGithubUserStatisticsUpdateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more MetricsGithubUserStatistics and returns the data updated in the database.
   * @param {MetricsGithubUserStatisticsUpdateManyAndReturnArgs} args - Arguments to update many MetricsGithubUserStatistics.
   * @example
   * // Update many MetricsGithubUserStatistics
   * const metricsGithubUserStatistics = await prisma.metricsGithubUserStatistics.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more MetricsGithubUserStatistics and only return the `id`
   * const metricsGithubUserStatisticsWithIdOnly = await prisma.metricsGithubUserStatistics.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends MetricsGithubUserStatisticsUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, MetricsGithubUserStatisticsUpdateManyAndReturnArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$MetricsGithubUserStatisticsPayload<ExtArgs>,
      T,
      'updateManyAndReturn',
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one MetricsGithubUserStatistics.
   * @param {MetricsGithubUserStatisticsUpsertArgs} args - Arguments to update or create a MetricsGithubUserStatistics.
   * @example
   * // Update or create a MetricsGithubUserStatistics
   * const metricsGithubUserStatistics = await prisma.metricsGithubUserStatistics.upsert({
   *   create: {
   *     // ... data to create a MetricsGithubUserStatistics
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the MetricsGithubUserStatistics we want to update
   *   }
   * })
   */
  upsert<T extends MetricsGithubUserStatisticsUpsertArgs>(
    args: Prisma.SelectSubset<T, MetricsGithubUserStatisticsUpsertArgs<ExtArgs>>,
  ): Prisma.Prisma__MetricsGithubUserStatisticsClient<
    runtime.Types.Result.GetResult<Prisma.$MetricsGithubUserStatisticsPayload<ExtArgs>, T, 'upsert', GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of MetricsGithubUserStatistics.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MetricsGithubUserStatisticsCountArgs} args - Arguments to filter MetricsGithubUserStatistics to count.
   * @example
   * // Count the number of MetricsGithubUserStatistics
   * const count = await prisma.metricsGithubUserStatistics.count({
   *   where: {
   *     // ... the filter for the MetricsGithubUserStatistics we want to count
   *   }
   * })
   **/
  count<T extends MetricsGithubUserStatisticsCountArgs>(
    args?: Prisma.Subset<T, MetricsGithubUserStatisticsCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], MetricsGithubUserStatisticsCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a MetricsGithubUserStatistics.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MetricsGithubUserStatisticsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends MetricsGithubUserStatisticsAggregateArgs>(
    args: Prisma.Subset<T, MetricsGithubUserStatisticsAggregateArgs>,
  ): Prisma.PrismaPromise<GetMetricsGithubUserStatisticsAggregateType<T>>;

  /**
   * Group by MetricsGithubUserStatistics.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MetricsGithubUserStatisticsGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends MetricsGithubUserStatisticsGroupByArgs,
    HasSelectOrTake extends Prisma.Or<Prisma.Extends<'skip', Prisma.Keys<T>>, Prisma.Extends<'take', Prisma.Keys<T>>>,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: MetricsGithubUserStatisticsGroupByArgs['orderBy'] }
      : { orderBy?: MetricsGithubUserStatisticsGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [Error, 'Field ', P, ` in "having" needs to be provided in "by"`];
          }[HavingFields]
        : 'take' extends Prisma.Keys<T>
          ? 'orderBy' extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : 'skip' extends Prisma.Keys<T>
            ? 'orderBy' extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<T, MetricsGithubUserStatisticsGroupByArgs, OrderByArg> & InputErrors,
  ): {} extends InputErrors ? GetMetricsGithubUserStatisticsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the MetricsGithubUserStatistics model
   */
  readonly fields: MetricsGithubUserStatisticsFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for MetricsGithubUserStatistics.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__MetricsGithubUserStatisticsClient<
  T,
  Null = never,
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: 'PrismaPromise';
  MetricsUser_MetricsGithubUserStatistics_createdByToMetricsUser<T extends Prisma.MetricsUserDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.MetricsUserDefaultArgs<ExtArgs>>,
  ): Prisma.Prisma__MetricsUserClient<
    | runtime.Types.Result.GetResult<Prisma.$MetricsUserPayload<ExtArgs>, T, 'findUniqueOrThrow', GlobalOmitOptions>
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  MetricsUser_MetricsGithubUserStatistics_updatedByToMetricsUser<T extends Prisma.MetricsUserDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.MetricsUserDefaultArgs<ExtArgs>>,
  ): Prisma.Prisma__MetricsUserClient<
    | runtime.Types.Result.GetResult<Prisma.$MetricsUserPayload<ExtArgs>, T, 'findUniqueOrThrow', GlobalOmitOptions>
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  MetricsGithubUser<T extends Prisma.MetricsGithubUserDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.MetricsGithubUserDefaultArgs<ExtArgs>>,
  ): Prisma.Prisma__MetricsGithubUserClient<
    | runtime.Types.Result.GetResult<
        Prisma.$MetricsGithubUserPayload<ExtArgs>,
        T,
        'findUniqueOrThrow',
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the MetricsGithubUserStatistics model
 */
export interface MetricsGithubUserStatisticsFieldRefs {
  readonly id: Prisma.FieldRef<'MetricsGithubUserStatistics', 'String'>;
  readonly userId: Prisma.FieldRef<'MetricsGithubUserStatistics', 'String'>;
  readonly periodType: Prisma.FieldRef<'MetricsGithubUserStatistics', 'String'>;
  readonly followersCount: Prisma.FieldRef<'MetricsGithubUserStatistics', 'Int'>;
  readonly followingCount: Prisma.FieldRef<'MetricsGithubUserStatistics', 'Int'>;
  readonly recordedAt: Prisma.FieldRef<'MetricsGithubUserStatistics', 'DateTime'>;
  readonly createdBy: Prisma.FieldRef<'MetricsGithubUserStatistics', 'String'>;
  readonly updatedBy: Prisma.FieldRef<'MetricsGithubUserStatistics', 'String'>;
  readonly createdAt: Prisma.FieldRef<'MetricsGithubUserStatistics', 'DateTime'>;
  readonly updatedAt: Prisma.FieldRef<'MetricsGithubUserStatistics', 'DateTime'>;
  readonly tenantId: Prisma.FieldRef<'MetricsGithubUserStatistics', 'String'>;
}

// Custom InputTypes
/**
 * MetricsGithubUserStatistics findUnique
 */
export type MetricsGithubUserStatisticsFindUniqueArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the MetricsGithubUserStatistics
   */
  select?: Prisma.MetricsGithubUserStatisticsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the MetricsGithubUserStatistics
   */
  omit?: Prisma.MetricsGithubUserStatisticsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MetricsGithubUserStatisticsInclude<ExtArgs> | null;
  /**
   * Filter, which MetricsGithubUserStatistics to fetch.
   */
  where: Prisma.MetricsGithubUserStatisticsWhereUniqueInput;
};

/**
 * MetricsGithubUserStatistics findUniqueOrThrow
 */
export type MetricsGithubUserStatisticsFindUniqueOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the MetricsGithubUserStatistics
   */
  select?: Prisma.MetricsGithubUserStatisticsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the MetricsGithubUserStatistics
   */
  omit?: Prisma.MetricsGithubUserStatisticsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MetricsGithubUserStatisticsInclude<ExtArgs> | null;
  /**
   * Filter, which MetricsGithubUserStatistics to fetch.
   */
  where: Prisma.MetricsGithubUserStatisticsWhereUniqueInput;
};

/**
 * MetricsGithubUserStatistics findFirst
 */
export type MetricsGithubUserStatisticsFindFirstArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the MetricsGithubUserStatistics
   */
  select?: Prisma.MetricsGithubUserStatisticsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the MetricsGithubUserStatistics
   */
  omit?: Prisma.MetricsGithubUserStatisticsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MetricsGithubUserStatisticsInclude<ExtArgs> | null;
  /**
   * Filter, which MetricsGithubUserStatistics to fetch.
   */
  where?: Prisma.MetricsGithubUserStatisticsWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of MetricsGithubUserStatistics to fetch.
   */
  orderBy?:
    | Prisma.MetricsGithubUserStatisticsOrderByWithRelationInput
    | Prisma.MetricsGithubUserStatisticsOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for MetricsGithubUserStatistics.
   */
  cursor?: Prisma.MetricsGithubUserStatisticsWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` MetricsGithubUserStatistics from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` MetricsGithubUserStatistics.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of MetricsGithubUserStatistics.
   */
  distinct?: Prisma.MetricsGithubUserStatisticsScalarFieldEnum | Prisma.MetricsGithubUserStatisticsScalarFieldEnum[];
};

/**
 * MetricsGithubUserStatistics findFirstOrThrow
 */
export type MetricsGithubUserStatisticsFindFirstOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the MetricsGithubUserStatistics
   */
  select?: Prisma.MetricsGithubUserStatisticsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the MetricsGithubUserStatistics
   */
  omit?: Prisma.MetricsGithubUserStatisticsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MetricsGithubUserStatisticsInclude<ExtArgs> | null;
  /**
   * Filter, which MetricsGithubUserStatistics to fetch.
   */
  where?: Prisma.MetricsGithubUserStatisticsWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of MetricsGithubUserStatistics to fetch.
   */
  orderBy?:
    | Prisma.MetricsGithubUserStatisticsOrderByWithRelationInput
    | Prisma.MetricsGithubUserStatisticsOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for MetricsGithubUserStatistics.
   */
  cursor?: Prisma.MetricsGithubUserStatisticsWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` MetricsGithubUserStatistics from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` MetricsGithubUserStatistics.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of MetricsGithubUserStatistics.
   */
  distinct?: Prisma.MetricsGithubUserStatisticsScalarFieldEnum | Prisma.MetricsGithubUserStatisticsScalarFieldEnum[];
};

/**
 * MetricsGithubUserStatistics findMany
 */
export type MetricsGithubUserStatisticsFindManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the MetricsGithubUserStatistics
   */
  select?: Prisma.MetricsGithubUserStatisticsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the MetricsGithubUserStatistics
   */
  omit?: Prisma.MetricsGithubUserStatisticsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MetricsGithubUserStatisticsInclude<ExtArgs> | null;
  /**
   * Filter, which MetricsGithubUserStatistics to fetch.
   */
  where?: Prisma.MetricsGithubUserStatisticsWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of MetricsGithubUserStatistics to fetch.
   */
  orderBy?:
    | Prisma.MetricsGithubUserStatisticsOrderByWithRelationInput
    | Prisma.MetricsGithubUserStatisticsOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing MetricsGithubUserStatistics.
   */
  cursor?: Prisma.MetricsGithubUserStatisticsWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` MetricsGithubUserStatistics from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` MetricsGithubUserStatistics.
   */
  skip?: number;
  distinct?: Prisma.MetricsGithubUserStatisticsScalarFieldEnum | Prisma.MetricsGithubUserStatisticsScalarFieldEnum[];
};

/**
 * MetricsGithubUserStatistics create
 */
export type MetricsGithubUserStatisticsCreateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the MetricsGithubUserStatistics
   */
  select?: Prisma.MetricsGithubUserStatisticsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the MetricsGithubUserStatistics
   */
  omit?: Prisma.MetricsGithubUserStatisticsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MetricsGithubUserStatisticsInclude<ExtArgs> | null;
  /**
   * The data needed to create a MetricsGithubUserStatistics.
   */
  data: Prisma.XOR<
    Prisma.MetricsGithubUserStatisticsCreateInput,
    Prisma.MetricsGithubUserStatisticsUncheckedCreateInput
  >;
};

/**
 * MetricsGithubUserStatistics createMany
 */
export type MetricsGithubUserStatisticsCreateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many MetricsGithubUserStatistics.
   */
  data: Prisma.MetricsGithubUserStatisticsCreateManyInput | Prisma.MetricsGithubUserStatisticsCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * MetricsGithubUserStatistics createManyAndReturn
 */
export type MetricsGithubUserStatisticsCreateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the MetricsGithubUserStatistics
   */
  select?: Prisma.MetricsGithubUserStatisticsSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the MetricsGithubUserStatistics
   */
  omit?: Prisma.MetricsGithubUserStatisticsOmit<ExtArgs> | null;
  /**
   * The data used to create many MetricsGithubUserStatistics.
   */
  data: Prisma.MetricsGithubUserStatisticsCreateManyInput | Prisma.MetricsGithubUserStatisticsCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MetricsGithubUserStatisticsIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * MetricsGithubUserStatistics update
 */
export type MetricsGithubUserStatisticsUpdateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the MetricsGithubUserStatistics
   */
  select?: Prisma.MetricsGithubUserStatisticsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the MetricsGithubUserStatistics
   */
  omit?: Prisma.MetricsGithubUserStatisticsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MetricsGithubUserStatisticsInclude<ExtArgs> | null;
  /**
   * The data needed to update a MetricsGithubUserStatistics.
   */
  data: Prisma.XOR<
    Prisma.MetricsGithubUserStatisticsUpdateInput,
    Prisma.MetricsGithubUserStatisticsUncheckedUpdateInput
  >;
  /**
   * Choose, which MetricsGithubUserStatistics to update.
   */
  where: Prisma.MetricsGithubUserStatisticsWhereUniqueInput;
};

/**
 * MetricsGithubUserStatistics updateMany
 */
export type MetricsGithubUserStatisticsUpdateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update MetricsGithubUserStatistics.
   */
  data: Prisma.XOR<
    Prisma.MetricsGithubUserStatisticsUpdateManyMutationInput,
    Prisma.MetricsGithubUserStatisticsUncheckedUpdateManyInput
  >;
  /**
   * Filter which MetricsGithubUserStatistics to update
   */
  where?: Prisma.MetricsGithubUserStatisticsWhereInput;
  /**
   * Limit how many MetricsGithubUserStatistics to update.
   */
  limit?: number;
};

/**
 * MetricsGithubUserStatistics updateManyAndReturn
 */
export type MetricsGithubUserStatisticsUpdateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the MetricsGithubUserStatistics
   */
  select?: Prisma.MetricsGithubUserStatisticsSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the MetricsGithubUserStatistics
   */
  omit?: Prisma.MetricsGithubUserStatisticsOmit<ExtArgs> | null;
  /**
   * The data used to update MetricsGithubUserStatistics.
   */
  data: Prisma.XOR<
    Prisma.MetricsGithubUserStatisticsUpdateManyMutationInput,
    Prisma.MetricsGithubUserStatisticsUncheckedUpdateManyInput
  >;
  /**
   * Filter which MetricsGithubUserStatistics to update
   */
  where?: Prisma.MetricsGithubUserStatisticsWhereInput;
  /**
   * Limit how many MetricsGithubUserStatistics to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MetricsGithubUserStatisticsIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * MetricsGithubUserStatistics upsert
 */
export type MetricsGithubUserStatisticsUpsertArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the MetricsGithubUserStatistics
   */
  select?: Prisma.MetricsGithubUserStatisticsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the MetricsGithubUserStatistics
   */
  omit?: Prisma.MetricsGithubUserStatisticsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MetricsGithubUserStatisticsInclude<ExtArgs> | null;
  /**
   * The filter to search for the MetricsGithubUserStatistics to update in case it exists.
   */
  where: Prisma.MetricsGithubUserStatisticsWhereUniqueInput;
  /**
   * In case the MetricsGithubUserStatistics found by the `where` argument doesn't exist, create a new MetricsGithubUserStatistics with this data.
   */
  create: Prisma.XOR<
    Prisma.MetricsGithubUserStatisticsCreateInput,
    Prisma.MetricsGithubUserStatisticsUncheckedCreateInput
  >;
  /**
   * In case the MetricsGithubUserStatistics was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.MetricsGithubUserStatisticsUpdateInput,
    Prisma.MetricsGithubUserStatisticsUncheckedUpdateInput
  >;
};

/**
 * MetricsGithubUserStatistics delete
 */
export type MetricsGithubUserStatisticsDeleteArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the MetricsGithubUserStatistics
   */
  select?: Prisma.MetricsGithubUserStatisticsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the MetricsGithubUserStatistics
   */
  omit?: Prisma.MetricsGithubUserStatisticsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MetricsGithubUserStatisticsInclude<ExtArgs> | null;
  /**
   * Filter which MetricsGithubUserStatistics to delete.
   */
  where: Prisma.MetricsGithubUserStatisticsWhereUniqueInput;
};

/**
 * MetricsGithubUserStatistics deleteMany
 */
export type MetricsGithubUserStatisticsDeleteManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which MetricsGithubUserStatistics to delete
   */
  where?: Prisma.MetricsGithubUserStatisticsWhereInput;
  /**
   * Limit how many MetricsGithubUserStatistics to delete.
   */
  limit?: number;
};

/**
 * MetricsGithubUserStatistics without action
 */
export type MetricsGithubUserStatisticsDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the MetricsGithubUserStatistics
   */
  select?: Prisma.MetricsGithubUserStatisticsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the MetricsGithubUserStatistics
   */
  omit?: Prisma.MetricsGithubUserStatisticsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MetricsGithubUserStatisticsInclude<ExtArgs> | null;
};
