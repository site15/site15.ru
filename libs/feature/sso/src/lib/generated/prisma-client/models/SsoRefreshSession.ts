/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/**
 * This file exports the `SsoRefreshSession` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from '@prisma/client/runtime/client';
import type * as $Enums from '../enums';
import type * as Prisma from '../internal/prismaNamespace';

/**
 * Model SsoRefreshSession
 *
 */
export type SsoRefreshSessionModel = runtime.Types.Result.DefaultSelection<Prisma.$SsoRefreshSessionPayload>;

export type AggregateSsoRefreshSession = {
  _count: SsoRefreshSessionCountAggregateOutputType | null;
  _min: SsoRefreshSessionMinAggregateOutputType | null;
  _max: SsoRefreshSessionMaxAggregateOutputType | null;
};

export type SsoRefreshSessionMinAggregateOutputType = {
  id: string | null;
  refreshToken: string | null;
  userAgent: string | null;
  fingerprint: string | null;
  userIp: string | null;
  expiresAt: Date | null;
  enabled: boolean | null;
  userId: string | null;
  tenantId: string | null;
  createdAt: Date | null;
  updatedAt: Date | null;
};

export type SsoRefreshSessionMaxAggregateOutputType = {
  id: string | null;
  refreshToken: string | null;
  userAgent: string | null;
  fingerprint: string | null;
  userIp: string | null;
  expiresAt: Date | null;
  enabled: boolean | null;
  userId: string | null;
  tenantId: string | null;
  createdAt: Date | null;
  updatedAt: Date | null;
};

export type SsoRefreshSessionCountAggregateOutputType = {
  id: number;
  refreshToken: number;
  userAgent: number;
  fingerprint: number;
  userIp: number;
  expiresAt: number;
  userData: number;
  enabled: number;
  userId: number;
  tenantId: number;
  createdAt: number;
  updatedAt: number;
  _all: number;
};

export type SsoRefreshSessionMinAggregateInputType = {
  id?: true;
  refreshToken?: true;
  userAgent?: true;
  fingerprint?: true;
  userIp?: true;
  expiresAt?: true;
  enabled?: true;
  userId?: true;
  tenantId?: true;
  createdAt?: true;
  updatedAt?: true;
};

export type SsoRefreshSessionMaxAggregateInputType = {
  id?: true;
  refreshToken?: true;
  userAgent?: true;
  fingerprint?: true;
  userIp?: true;
  expiresAt?: true;
  enabled?: true;
  userId?: true;
  tenantId?: true;
  createdAt?: true;
  updatedAt?: true;
};

export type SsoRefreshSessionCountAggregateInputType = {
  id?: true;
  refreshToken?: true;
  userAgent?: true;
  fingerprint?: true;
  userIp?: true;
  expiresAt?: true;
  userData?: true;
  enabled?: true;
  userId?: true;
  tenantId?: true;
  createdAt?: true;
  updatedAt?: true;
  _all?: true;
};

export type SsoRefreshSessionAggregateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which SsoRefreshSession to aggregate.
   */
  where?: Prisma.SsoRefreshSessionWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of SsoRefreshSessions to fetch.
   */
  orderBy?: Prisma.SsoRefreshSessionOrderByWithRelationInput | Prisma.SsoRefreshSessionOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.SsoRefreshSessionWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` SsoRefreshSessions from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` SsoRefreshSessions.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned SsoRefreshSessions
   **/
  _count?: true | SsoRefreshSessionCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: SsoRefreshSessionMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: SsoRefreshSessionMaxAggregateInputType;
};

export type GetSsoRefreshSessionAggregateType<T extends SsoRefreshSessionAggregateArgs> = {
  [P in keyof T & keyof AggregateSsoRefreshSession]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateSsoRefreshSession[P]>
    : Prisma.GetScalarType<T[P], AggregateSsoRefreshSession[P]>;
};

export type SsoRefreshSessionGroupByArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.SsoRefreshSessionWhereInput;
  orderBy?: Prisma.SsoRefreshSessionOrderByWithAggregationInput | Prisma.SsoRefreshSessionOrderByWithAggregationInput[];
  by: Prisma.SsoRefreshSessionScalarFieldEnum[] | Prisma.SsoRefreshSessionScalarFieldEnum;
  having?: Prisma.SsoRefreshSessionScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: SsoRefreshSessionCountAggregateInputType | true;
  _min?: SsoRefreshSessionMinAggregateInputType;
  _max?: SsoRefreshSessionMaxAggregateInputType;
};

export type SsoRefreshSessionGroupByOutputType = {
  id: string;
  refreshToken: string;
  userAgent: string | null;
  fingerprint: string | null;
  userIp: string | null;
  expiresAt: Date | null;
  userData: runtime.JsonValue | null;
  enabled: boolean;
  userId: string;
  tenantId: string;
  createdAt: Date;
  updatedAt: Date;
  _count: SsoRefreshSessionCountAggregateOutputType | null;
  _min: SsoRefreshSessionMinAggregateOutputType | null;
  _max: SsoRefreshSessionMaxAggregateOutputType | null;
};

type GetSsoRefreshSessionGroupByPayload<T extends SsoRefreshSessionGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<SsoRefreshSessionGroupByOutputType, T['by']> & {
      [P in keyof T & keyof SsoRefreshSessionGroupByOutputType]: P extends '_count'
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<T[P], SsoRefreshSessionGroupByOutputType[P]>
        : Prisma.GetScalarType<T[P], SsoRefreshSessionGroupByOutputType[P]>;
    }
  >
>;

export type SsoRefreshSessionWhereInput = {
  AND?: Prisma.SsoRefreshSessionWhereInput | Prisma.SsoRefreshSessionWhereInput[];
  OR?: Prisma.SsoRefreshSessionWhereInput[];
  NOT?: Prisma.SsoRefreshSessionWhereInput | Prisma.SsoRefreshSessionWhereInput[];
  id?: Prisma.UuidFilter<'SsoRefreshSession'> | string;
  refreshToken?: Prisma.UuidFilter<'SsoRefreshSession'> | string;
  userAgent?: Prisma.StringNullableFilter<'SsoRefreshSession'> | string | null;
  fingerprint?: Prisma.StringNullableFilter<'SsoRefreshSession'> | string | null;
  userIp?: Prisma.StringNullableFilter<'SsoRefreshSession'> | string | null;
  expiresAt?: Prisma.DateTimeNullableFilter<'SsoRefreshSession'> | Date | string | null;
  userData?: Prisma.JsonNullableFilter<'SsoRefreshSession'>;
  enabled?: Prisma.BoolFilter<'SsoRefreshSession'> | boolean;
  userId?: Prisma.UuidFilter<'SsoRefreshSession'> | string;
  tenantId?: Prisma.UuidFilter<'SsoRefreshSession'> | string;
  createdAt?: Prisma.DateTimeFilter<'SsoRefreshSession'> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<'SsoRefreshSession'> | Date | string;
  SsoTenant?: Prisma.XOR<Prisma.SsoTenantScalarRelationFilter, Prisma.SsoTenantWhereInput>;
  SsoUser?: Prisma.XOR<Prisma.SsoUserScalarRelationFilter, Prisma.SsoUserWhereInput>;
};

export type SsoRefreshSessionOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  refreshToken?: Prisma.SortOrder;
  userAgent?: Prisma.SortOrderInput | Prisma.SortOrder;
  fingerprint?: Prisma.SortOrderInput | Prisma.SortOrder;
  userIp?: Prisma.SortOrderInput | Prisma.SortOrder;
  expiresAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  userData?: Prisma.SortOrderInput | Prisma.SortOrder;
  enabled?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  tenantId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  SsoTenant?: Prisma.SsoTenantOrderByWithRelationInput;
  SsoUser?: Prisma.SsoUserOrderByWithRelationInput;
};

export type SsoRefreshSessionWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string;
    AND?: Prisma.SsoRefreshSessionWhereInput | Prisma.SsoRefreshSessionWhereInput[];
    OR?: Prisma.SsoRefreshSessionWhereInput[];
    NOT?: Prisma.SsoRefreshSessionWhereInput | Prisma.SsoRefreshSessionWhereInput[];
    refreshToken?: Prisma.UuidFilter<'SsoRefreshSession'> | string;
    userAgent?: Prisma.StringNullableFilter<'SsoRefreshSession'> | string | null;
    fingerprint?: Prisma.StringNullableFilter<'SsoRefreshSession'> | string | null;
    userIp?: Prisma.StringNullableFilter<'SsoRefreshSession'> | string | null;
    expiresAt?: Prisma.DateTimeNullableFilter<'SsoRefreshSession'> | Date | string | null;
    userData?: Prisma.JsonNullableFilter<'SsoRefreshSession'>;
    enabled?: Prisma.BoolFilter<'SsoRefreshSession'> | boolean;
    userId?: Prisma.UuidFilter<'SsoRefreshSession'> | string;
    tenantId?: Prisma.UuidFilter<'SsoRefreshSession'> | string;
    createdAt?: Prisma.DateTimeFilter<'SsoRefreshSession'> | Date | string;
    updatedAt?: Prisma.DateTimeFilter<'SsoRefreshSession'> | Date | string;
    SsoTenant?: Prisma.XOR<Prisma.SsoTenantScalarRelationFilter, Prisma.SsoTenantWhereInput>;
    SsoUser?: Prisma.XOR<Prisma.SsoUserScalarRelationFilter, Prisma.SsoUserWhereInput>;
  },
  'id'
>;

export type SsoRefreshSessionOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  refreshToken?: Prisma.SortOrder;
  userAgent?: Prisma.SortOrderInput | Prisma.SortOrder;
  fingerprint?: Prisma.SortOrderInput | Prisma.SortOrder;
  userIp?: Prisma.SortOrderInput | Prisma.SortOrder;
  expiresAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  userData?: Prisma.SortOrderInput | Prisma.SortOrder;
  enabled?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  tenantId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  _count?: Prisma.SsoRefreshSessionCountOrderByAggregateInput;
  _max?: Prisma.SsoRefreshSessionMaxOrderByAggregateInput;
  _min?: Prisma.SsoRefreshSessionMinOrderByAggregateInput;
};

export type SsoRefreshSessionScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.SsoRefreshSessionScalarWhereWithAggregatesInput
    | Prisma.SsoRefreshSessionScalarWhereWithAggregatesInput[];
  OR?: Prisma.SsoRefreshSessionScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.SsoRefreshSessionScalarWhereWithAggregatesInput
    | Prisma.SsoRefreshSessionScalarWhereWithAggregatesInput[];
  id?: Prisma.UuidWithAggregatesFilter<'SsoRefreshSession'> | string;
  refreshToken?: Prisma.UuidWithAggregatesFilter<'SsoRefreshSession'> | string;
  userAgent?: Prisma.StringNullableWithAggregatesFilter<'SsoRefreshSession'> | string | null;
  fingerprint?: Prisma.StringNullableWithAggregatesFilter<'SsoRefreshSession'> | string | null;
  userIp?: Prisma.StringNullableWithAggregatesFilter<'SsoRefreshSession'> | string | null;
  expiresAt?: Prisma.DateTimeNullableWithAggregatesFilter<'SsoRefreshSession'> | Date | string | null;
  userData?: Prisma.JsonNullableWithAggregatesFilter<'SsoRefreshSession'>;
  enabled?: Prisma.BoolWithAggregatesFilter<'SsoRefreshSession'> | boolean;
  userId?: Prisma.UuidWithAggregatesFilter<'SsoRefreshSession'> | string;
  tenantId?: Prisma.UuidWithAggregatesFilter<'SsoRefreshSession'> | string;
  createdAt?: Prisma.DateTimeWithAggregatesFilter<'SsoRefreshSession'> | Date | string;
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<'SsoRefreshSession'> | Date | string;
};

export type SsoRefreshSessionCreateInput = {
  id?: string;
  refreshToken: string;
  userAgent?: string | null;
  fingerprint?: string | null;
  userIp?: string | null;
  expiresAt?: Date | string | null;
  userData?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  enabled: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  SsoTenant: Prisma.SsoTenantCreateNestedOneWithoutSsoRefreshSessionInput;
  SsoUser: Prisma.SsoUserCreateNestedOneWithoutSsoRefreshSessionInput;
};

export type SsoRefreshSessionUncheckedCreateInput = {
  id?: string;
  refreshToken: string;
  userAgent?: string | null;
  fingerprint?: string | null;
  userIp?: string | null;
  expiresAt?: Date | string | null;
  userData?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  enabled: boolean;
  userId: string;
  tenantId: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type SsoRefreshSessionUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  refreshToken?: Prisma.StringFieldUpdateOperationsInput | string;
  userAgent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  fingerprint?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userIp?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  userData?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  SsoTenant?: Prisma.SsoTenantUpdateOneRequiredWithoutSsoRefreshSessionNestedInput;
  SsoUser?: Prisma.SsoUserUpdateOneRequiredWithoutSsoRefreshSessionNestedInput;
};

export type SsoRefreshSessionUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  refreshToken?: Prisma.StringFieldUpdateOperationsInput | string;
  userAgent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  fingerprint?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userIp?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  userData?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  userId?: Prisma.StringFieldUpdateOperationsInput | string;
  tenantId?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type SsoRefreshSessionCreateManyInput = {
  id?: string;
  refreshToken: string;
  userAgent?: string | null;
  fingerprint?: string | null;
  userIp?: string | null;
  expiresAt?: Date | string | null;
  userData?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  enabled: boolean;
  userId: string;
  tenantId: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type SsoRefreshSessionUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  refreshToken?: Prisma.StringFieldUpdateOperationsInput | string;
  userAgent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  fingerprint?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userIp?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  userData?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type SsoRefreshSessionUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  refreshToken?: Prisma.StringFieldUpdateOperationsInput | string;
  userAgent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  fingerprint?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userIp?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  userData?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  userId?: Prisma.StringFieldUpdateOperationsInput | string;
  tenantId?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type SsoRefreshSessionListRelationFilter = {
  every?: Prisma.SsoRefreshSessionWhereInput;
  some?: Prisma.SsoRefreshSessionWhereInput;
  none?: Prisma.SsoRefreshSessionWhereInput;
};

export type SsoRefreshSessionOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type SsoRefreshSessionCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  refreshToken?: Prisma.SortOrder;
  userAgent?: Prisma.SortOrder;
  fingerprint?: Prisma.SortOrder;
  userIp?: Prisma.SortOrder;
  expiresAt?: Prisma.SortOrder;
  userData?: Prisma.SortOrder;
  enabled?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  tenantId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type SsoRefreshSessionMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  refreshToken?: Prisma.SortOrder;
  userAgent?: Prisma.SortOrder;
  fingerprint?: Prisma.SortOrder;
  userIp?: Prisma.SortOrder;
  expiresAt?: Prisma.SortOrder;
  enabled?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  tenantId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type SsoRefreshSessionMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  refreshToken?: Prisma.SortOrder;
  userAgent?: Prisma.SortOrder;
  fingerprint?: Prisma.SortOrder;
  userIp?: Prisma.SortOrder;
  expiresAt?: Prisma.SortOrder;
  enabled?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  tenantId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type SsoRefreshSessionCreateNestedManyWithoutSsoUserInput = {
  create?:
    | Prisma.XOR<
        Prisma.SsoRefreshSessionCreateWithoutSsoUserInput,
        Prisma.SsoRefreshSessionUncheckedCreateWithoutSsoUserInput
      >
    | Prisma.SsoRefreshSessionCreateWithoutSsoUserInput[]
    | Prisma.SsoRefreshSessionUncheckedCreateWithoutSsoUserInput[];
  connectOrCreate?:
    | Prisma.SsoRefreshSessionCreateOrConnectWithoutSsoUserInput
    | Prisma.SsoRefreshSessionCreateOrConnectWithoutSsoUserInput[];
  createMany?: Prisma.SsoRefreshSessionCreateManySsoUserInputEnvelope;
  connect?: Prisma.SsoRefreshSessionWhereUniqueInput | Prisma.SsoRefreshSessionWhereUniqueInput[];
};

export type SsoRefreshSessionUncheckedCreateNestedManyWithoutSsoUserInput = {
  create?:
    | Prisma.XOR<
        Prisma.SsoRefreshSessionCreateWithoutSsoUserInput,
        Prisma.SsoRefreshSessionUncheckedCreateWithoutSsoUserInput
      >
    | Prisma.SsoRefreshSessionCreateWithoutSsoUserInput[]
    | Prisma.SsoRefreshSessionUncheckedCreateWithoutSsoUserInput[];
  connectOrCreate?:
    | Prisma.SsoRefreshSessionCreateOrConnectWithoutSsoUserInput
    | Prisma.SsoRefreshSessionCreateOrConnectWithoutSsoUserInput[];
  createMany?: Prisma.SsoRefreshSessionCreateManySsoUserInputEnvelope;
  connect?: Prisma.SsoRefreshSessionWhereUniqueInput | Prisma.SsoRefreshSessionWhereUniqueInput[];
};

export type SsoRefreshSessionUpdateManyWithoutSsoUserNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.SsoRefreshSessionCreateWithoutSsoUserInput,
        Prisma.SsoRefreshSessionUncheckedCreateWithoutSsoUserInput
      >
    | Prisma.SsoRefreshSessionCreateWithoutSsoUserInput[]
    | Prisma.SsoRefreshSessionUncheckedCreateWithoutSsoUserInput[];
  connectOrCreate?:
    | Prisma.SsoRefreshSessionCreateOrConnectWithoutSsoUserInput
    | Prisma.SsoRefreshSessionCreateOrConnectWithoutSsoUserInput[];
  upsert?:
    | Prisma.SsoRefreshSessionUpsertWithWhereUniqueWithoutSsoUserInput
    | Prisma.SsoRefreshSessionUpsertWithWhereUniqueWithoutSsoUserInput[];
  createMany?: Prisma.SsoRefreshSessionCreateManySsoUserInputEnvelope;
  set?: Prisma.SsoRefreshSessionWhereUniqueInput | Prisma.SsoRefreshSessionWhereUniqueInput[];
  disconnect?: Prisma.SsoRefreshSessionWhereUniqueInput | Prisma.SsoRefreshSessionWhereUniqueInput[];
  delete?: Prisma.SsoRefreshSessionWhereUniqueInput | Prisma.SsoRefreshSessionWhereUniqueInput[];
  connect?: Prisma.SsoRefreshSessionWhereUniqueInput | Prisma.SsoRefreshSessionWhereUniqueInput[];
  update?:
    | Prisma.SsoRefreshSessionUpdateWithWhereUniqueWithoutSsoUserInput
    | Prisma.SsoRefreshSessionUpdateWithWhereUniqueWithoutSsoUserInput[];
  updateMany?:
    | Prisma.SsoRefreshSessionUpdateManyWithWhereWithoutSsoUserInput
    | Prisma.SsoRefreshSessionUpdateManyWithWhereWithoutSsoUserInput[];
  deleteMany?: Prisma.SsoRefreshSessionScalarWhereInput | Prisma.SsoRefreshSessionScalarWhereInput[];
};

export type SsoRefreshSessionUncheckedUpdateManyWithoutSsoUserNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.SsoRefreshSessionCreateWithoutSsoUserInput,
        Prisma.SsoRefreshSessionUncheckedCreateWithoutSsoUserInput
      >
    | Prisma.SsoRefreshSessionCreateWithoutSsoUserInput[]
    | Prisma.SsoRefreshSessionUncheckedCreateWithoutSsoUserInput[];
  connectOrCreate?:
    | Prisma.SsoRefreshSessionCreateOrConnectWithoutSsoUserInput
    | Prisma.SsoRefreshSessionCreateOrConnectWithoutSsoUserInput[];
  upsert?:
    | Prisma.SsoRefreshSessionUpsertWithWhereUniqueWithoutSsoUserInput
    | Prisma.SsoRefreshSessionUpsertWithWhereUniqueWithoutSsoUserInput[];
  createMany?: Prisma.SsoRefreshSessionCreateManySsoUserInputEnvelope;
  set?: Prisma.SsoRefreshSessionWhereUniqueInput | Prisma.SsoRefreshSessionWhereUniqueInput[];
  disconnect?: Prisma.SsoRefreshSessionWhereUniqueInput | Prisma.SsoRefreshSessionWhereUniqueInput[];
  delete?: Prisma.SsoRefreshSessionWhereUniqueInput | Prisma.SsoRefreshSessionWhereUniqueInput[];
  connect?: Prisma.SsoRefreshSessionWhereUniqueInput | Prisma.SsoRefreshSessionWhereUniqueInput[];
  update?:
    | Prisma.SsoRefreshSessionUpdateWithWhereUniqueWithoutSsoUserInput
    | Prisma.SsoRefreshSessionUpdateWithWhereUniqueWithoutSsoUserInput[];
  updateMany?:
    | Prisma.SsoRefreshSessionUpdateManyWithWhereWithoutSsoUserInput
    | Prisma.SsoRefreshSessionUpdateManyWithWhereWithoutSsoUserInput[];
  deleteMany?: Prisma.SsoRefreshSessionScalarWhereInput | Prisma.SsoRefreshSessionScalarWhereInput[];
};

export type SsoRefreshSessionCreateNestedManyWithoutSsoTenantInput = {
  create?:
    | Prisma.XOR<
        Prisma.SsoRefreshSessionCreateWithoutSsoTenantInput,
        Prisma.SsoRefreshSessionUncheckedCreateWithoutSsoTenantInput
      >
    | Prisma.SsoRefreshSessionCreateWithoutSsoTenantInput[]
    | Prisma.SsoRefreshSessionUncheckedCreateWithoutSsoTenantInput[];
  connectOrCreate?:
    | Prisma.SsoRefreshSessionCreateOrConnectWithoutSsoTenantInput
    | Prisma.SsoRefreshSessionCreateOrConnectWithoutSsoTenantInput[];
  createMany?: Prisma.SsoRefreshSessionCreateManySsoTenantInputEnvelope;
  connect?: Prisma.SsoRefreshSessionWhereUniqueInput | Prisma.SsoRefreshSessionWhereUniqueInput[];
};

export type SsoRefreshSessionUncheckedCreateNestedManyWithoutSsoTenantInput = {
  create?:
    | Prisma.XOR<
        Prisma.SsoRefreshSessionCreateWithoutSsoTenantInput,
        Prisma.SsoRefreshSessionUncheckedCreateWithoutSsoTenantInput
      >
    | Prisma.SsoRefreshSessionCreateWithoutSsoTenantInput[]
    | Prisma.SsoRefreshSessionUncheckedCreateWithoutSsoTenantInput[];
  connectOrCreate?:
    | Prisma.SsoRefreshSessionCreateOrConnectWithoutSsoTenantInput
    | Prisma.SsoRefreshSessionCreateOrConnectWithoutSsoTenantInput[];
  createMany?: Prisma.SsoRefreshSessionCreateManySsoTenantInputEnvelope;
  connect?: Prisma.SsoRefreshSessionWhereUniqueInput | Prisma.SsoRefreshSessionWhereUniqueInput[];
};

export type SsoRefreshSessionUpdateManyWithoutSsoTenantNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.SsoRefreshSessionCreateWithoutSsoTenantInput,
        Prisma.SsoRefreshSessionUncheckedCreateWithoutSsoTenantInput
      >
    | Prisma.SsoRefreshSessionCreateWithoutSsoTenantInput[]
    | Prisma.SsoRefreshSessionUncheckedCreateWithoutSsoTenantInput[];
  connectOrCreate?:
    | Prisma.SsoRefreshSessionCreateOrConnectWithoutSsoTenantInput
    | Prisma.SsoRefreshSessionCreateOrConnectWithoutSsoTenantInput[];
  upsert?:
    | Prisma.SsoRefreshSessionUpsertWithWhereUniqueWithoutSsoTenantInput
    | Prisma.SsoRefreshSessionUpsertWithWhereUniqueWithoutSsoTenantInput[];
  createMany?: Prisma.SsoRefreshSessionCreateManySsoTenantInputEnvelope;
  set?: Prisma.SsoRefreshSessionWhereUniqueInput | Prisma.SsoRefreshSessionWhereUniqueInput[];
  disconnect?: Prisma.SsoRefreshSessionWhereUniqueInput | Prisma.SsoRefreshSessionWhereUniqueInput[];
  delete?: Prisma.SsoRefreshSessionWhereUniqueInput | Prisma.SsoRefreshSessionWhereUniqueInput[];
  connect?: Prisma.SsoRefreshSessionWhereUniqueInput | Prisma.SsoRefreshSessionWhereUniqueInput[];
  update?:
    | Prisma.SsoRefreshSessionUpdateWithWhereUniqueWithoutSsoTenantInput
    | Prisma.SsoRefreshSessionUpdateWithWhereUniqueWithoutSsoTenantInput[];
  updateMany?:
    | Prisma.SsoRefreshSessionUpdateManyWithWhereWithoutSsoTenantInput
    | Prisma.SsoRefreshSessionUpdateManyWithWhereWithoutSsoTenantInput[];
  deleteMany?: Prisma.SsoRefreshSessionScalarWhereInput | Prisma.SsoRefreshSessionScalarWhereInput[];
};

export type SsoRefreshSessionUncheckedUpdateManyWithoutSsoTenantNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.SsoRefreshSessionCreateWithoutSsoTenantInput,
        Prisma.SsoRefreshSessionUncheckedCreateWithoutSsoTenantInput
      >
    | Prisma.SsoRefreshSessionCreateWithoutSsoTenantInput[]
    | Prisma.SsoRefreshSessionUncheckedCreateWithoutSsoTenantInput[];
  connectOrCreate?:
    | Prisma.SsoRefreshSessionCreateOrConnectWithoutSsoTenantInput
    | Prisma.SsoRefreshSessionCreateOrConnectWithoutSsoTenantInput[];
  upsert?:
    | Prisma.SsoRefreshSessionUpsertWithWhereUniqueWithoutSsoTenantInput
    | Prisma.SsoRefreshSessionUpsertWithWhereUniqueWithoutSsoTenantInput[];
  createMany?: Prisma.SsoRefreshSessionCreateManySsoTenantInputEnvelope;
  set?: Prisma.SsoRefreshSessionWhereUniqueInput | Prisma.SsoRefreshSessionWhereUniqueInput[];
  disconnect?: Prisma.SsoRefreshSessionWhereUniqueInput | Prisma.SsoRefreshSessionWhereUniqueInput[];
  delete?: Prisma.SsoRefreshSessionWhereUniqueInput | Prisma.SsoRefreshSessionWhereUniqueInput[];
  connect?: Prisma.SsoRefreshSessionWhereUniqueInput | Prisma.SsoRefreshSessionWhereUniqueInput[];
  update?:
    | Prisma.SsoRefreshSessionUpdateWithWhereUniqueWithoutSsoTenantInput
    | Prisma.SsoRefreshSessionUpdateWithWhereUniqueWithoutSsoTenantInput[];
  updateMany?:
    | Prisma.SsoRefreshSessionUpdateManyWithWhereWithoutSsoTenantInput
    | Prisma.SsoRefreshSessionUpdateManyWithWhereWithoutSsoTenantInput[];
  deleteMany?: Prisma.SsoRefreshSessionScalarWhereInput | Prisma.SsoRefreshSessionScalarWhereInput[];
};

export type SsoRefreshSessionCreateWithoutSsoUserInput = {
  id?: string;
  refreshToken: string;
  userAgent?: string | null;
  fingerprint?: string | null;
  userIp?: string | null;
  expiresAt?: Date | string | null;
  userData?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  enabled: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  SsoTenant: Prisma.SsoTenantCreateNestedOneWithoutSsoRefreshSessionInput;
};

export type SsoRefreshSessionUncheckedCreateWithoutSsoUserInput = {
  id?: string;
  refreshToken: string;
  userAgent?: string | null;
  fingerprint?: string | null;
  userIp?: string | null;
  expiresAt?: Date | string | null;
  userData?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  enabled: boolean;
  tenantId: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type SsoRefreshSessionCreateOrConnectWithoutSsoUserInput = {
  where: Prisma.SsoRefreshSessionWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SsoRefreshSessionCreateWithoutSsoUserInput,
    Prisma.SsoRefreshSessionUncheckedCreateWithoutSsoUserInput
  >;
};

export type SsoRefreshSessionCreateManySsoUserInputEnvelope = {
  data: Prisma.SsoRefreshSessionCreateManySsoUserInput | Prisma.SsoRefreshSessionCreateManySsoUserInput[];
  skipDuplicates?: boolean;
};

export type SsoRefreshSessionUpsertWithWhereUniqueWithoutSsoUserInput = {
  where: Prisma.SsoRefreshSessionWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.SsoRefreshSessionUpdateWithoutSsoUserInput,
    Prisma.SsoRefreshSessionUncheckedUpdateWithoutSsoUserInput
  >;
  create: Prisma.XOR<
    Prisma.SsoRefreshSessionCreateWithoutSsoUserInput,
    Prisma.SsoRefreshSessionUncheckedCreateWithoutSsoUserInput
  >;
};

export type SsoRefreshSessionUpdateWithWhereUniqueWithoutSsoUserInput = {
  where: Prisma.SsoRefreshSessionWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.SsoRefreshSessionUpdateWithoutSsoUserInput,
    Prisma.SsoRefreshSessionUncheckedUpdateWithoutSsoUserInput
  >;
};

export type SsoRefreshSessionUpdateManyWithWhereWithoutSsoUserInput = {
  where: Prisma.SsoRefreshSessionScalarWhereInput;
  data: Prisma.XOR<
    Prisma.SsoRefreshSessionUpdateManyMutationInput,
    Prisma.SsoRefreshSessionUncheckedUpdateManyWithoutSsoUserInput
  >;
};

export type SsoRefreshSessionScalarWhereInput = {
  AND?: Prisma.SsoRefreshSessionScalarWhereInput | Prisma.SsoRefreshSessionScalarWhereInput[];
  OR?: Prisma.SsoRefreshSessionScalarWhereInput[];
  NOT?: Prisma.SsoRefreshSessionScalarWhereInput | Prisma.SsoRefreshSessionScalarWhereInput[];
  id?: Prisma.UuidFilter<'SsoRefreshSession'> | string;
  refreshToken?: Prisma.UuidFilter<'SsoRefreshSession'> | string;
  userAgent?: Prisma.StringNullableFilter<'SsoRefreshSession'> | string | null;
  fingerprint?: Prisma.StringNullableFilter<'SsoRefreshSession'> | string | null;
  userIp?: Prisma.StringNullableFilter<'SsoRefreshSession'> | string | null;
  expiresAt?: Prisma.DateTimeNullableFilter<'SsoRefreshSession'> | Date | string | null;
  userData?: Prisma.JsonNullableFilter<'SsoRefreshSession'>;
  enabled?: Prisma.BoolFilter<'SsoRefreshSession'> | boolean;
  userId?: Prisma.UuidFilter<'SsoRefreshSession'> | string;
  tenantId?: Prisma.UuidFilter<'SsoRefreshSession'> | string;
  createdAt?: Prisma.DateTimeFilter<'SsoRefreshSession'> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<'SsoRefreshSession'> | Date | string;
};

export type SsoRefreshSessionCreateWithoutSsoTenantInput = {
  id?: string;
  refreshToken: string;
  userAgent?: string | null;
  fingerprint?: string | null;
  userIp?: string | null;
  expiresAt?: Date | string | null;
  userData?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  enabled: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  SsoUser: Prisma.SsoUserCreateNestedOneWithoutSsoRefreshSessionInput;
};

export type SsoRefreshSessionUncheckedCreateWithoutSsoTenantInput = {
  id?: string;
  refreshToken: string;
  userAgent?: string | null;
  fingerprint?: string | null;
  userIp?: string | null;
  expiresAt?: Date | string | null;
  userData?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  enabled: boolean;
  userId: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type SsoRefreshSessionCreateOrConnectWithoutSsoTenantInput = {
  where: Prisma.SsoRefreshSessionWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SsoRefreshSessionCreateWithoutSsoTenantInput,
    Prisma.SsoRefreshSessionUncheckedCreateWithoutSsoTenantInput
  >;
};

export type SsoRefreshSessionCreateManySsoTenantInputEnvelope = {
  data: Prisma.SsoRefreshSessionCreateManySsoTenantInput | Prisma.SsoRefreshSessionCreateManySsoTenantInput[];
  skipDuplicates?: boolean;
};

export type SsoRefreshSessionUpsertWithWhereUniqueWithoutSsoTenantInput = {
  where: Prisma.SsoRefreshSessionWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.SsoRefreshSessionUpdateWithoutSsoTenantInput,
    Prisma.SsoRefreshSessionUncheckedUpdateWithoutSsoTenantInput
  >;
  create: Prisma.XOR<
    Prisma.SsoRefreshSessionCreateWithoutSsoTenantInput,
    Prisma.SsoRefreshSessionUncheckedCreateWithoutSsoTenantInput
  >;
};

export type SsoRefreshSessionUpdateWithWhereUniqueWithoutSsoTenantInput = {
  where: Prisma.SsoRefreshSessionWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.SsoRefreshSessionUpdateWithoutSsoTenantInput,
    Prisma.SsoRefreshSessionUncheckedUpdateWithoutSsoTenantInput
  >;
};

export type SsoRefreshSessionUpdateManyWithWhereWithoutSsoTenantInput = {
  where: Prisma.SsoRefreshSessionScalarWhereInput;
  data: Prisma.XOR<
    Prisma.SsoRefreshSessionUpdateManyMutationInput,
    Prisma.SsoRefreshSessionUncheckedUpdateManyWithoutSsoTenantInput
  >;
};

export type SsoRefreshSessionCreateManySsoUserInput = {
  id?: string;
  refreshToken: string;
  userAgent?: string | null;
  fingerprint?: string | null;
  userIp?: string | null;
  expiresAt?: Date | string | null;
  userData?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  enabled: boolean;
  tenantId: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type SsoRefreshSessionUpdateWithoutSsoUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  refreshToken?: Prisma.StringFieldUpdateOperationsInput | string;
  userAgent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  fingerprint?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userIp?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  userData?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  SsoTenant?: Prisma.SsoTenantUpdateOneRequiredWithoutSsoRefreshSessionNestedInput;
};

export type SsoRefreshSessionUncheckedUpdateWithoutSsoUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  refreshToken?: Prisma.StringFieldUpdateOperationsInput | string;
  userAgent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  fingerprint?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userIp?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  userData?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  tenantId?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type SsoRefreshSessionUncheckedUpdateManyWithoutSsoUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  refreshToken?: Prisma.StringFieldUpdateOperationsInput | string;
  userAgent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  fingerprint?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userIp?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  userData?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  tenantId?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type SsoRefreshSessionCreateManySsoTenantInput = {
  id?: string;
  refreshToken: string;
  userAgent?: string | null;
  fingerprint?: string | null;
  userIp?: string | null;
  expiresAt?: Date | string | null;
  userData?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  enabled: boolean;
  userId: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type SsoRefreshSessionUpdateWithoutSsoTenantInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  refreshToken?: Prisma.StringFieldUpdateOperationsInput | string;
  userAgent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  fingerprint?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userIp?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  userData?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  SsoUser?: Prisma.SsoUserUpdateOneRequiredWithoutSsoRefreshSessionNestedInput;
};

export type SsoRefreshSessionUncheckedUpdateWithoutSsoTenantInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  refreshToken?: Prisma.StringFieldUpdateOperationsInput | string;
  userAgent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  fingerprint?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userIp?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  userData?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  userId?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type SsoRefreshSessionUncheckedUpdateManyWithoutSsoTenantInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  refreshToken?: Prisma.StringFieldUpdateOperationsInput | string;
  userAgent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  fingerprint?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userIp?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  userData?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  userId?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type SsoRefreshSessionSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    refreshToken?: boolean;
    userAgent?: boolean;
    fingerprint?: boolean;
    userIp?: boolean;
    expiresAt?: boolean;
    userData?: boolean;
    enabled?: boolean;
    userId?: boolean;
    tenantId?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    SsoTenant?: boolean | Prisma.SsoTenantDefaultArgs<ExtArgs>;
    SsoUser?: boolean | Prisma.SsoUserDefaultArgs<ExtArgs>;
  },
  ExtArgs['result']['ssoRefreshSession']
>;

export type SsoRefreshSessionSelectCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    refreshToken?: boolean;
    userAgent?: boolean;
    fingerprint?: boolean;
    userIp?: boolean;
    expiresAt?: boolean;
    userData?: boolean;
    enabled?: boolean;
    userId?: boolean;
    tenantId?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    SsoTenant?: boolean | Prisma.SsoTenantDefaultArgs<ExtArgs>;
    SsoUser?: boolean | Prisma.SsoUserDefaultArgs<ExtArgs>;
  },
  ExtArgs['result']['ssoRefreshSession']
>;

export type SsoRefreshSessionSelectUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    refreshToken?: boolean;
    userAgent?: boolean;
    fingerprint?: boolean;
    userIp?: boolean;
    expiresAt?: boolean;
    userData?: boolean;
    enabled?: boolean;
    userId?: boolean;
    tenantId?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    SsoTenant?: boolean | Prisma.SsoTenantDefaultArgs<ExtArgs>;
    SsoUser?: boolean | Prisma.SsoUserDefaultArgs<ExtArgs>;
  },
  ExtArgs['result']['ssoRefreshSession']
>;

export type SsoRefreshSessionSelectScalar = {
  id?: boolean;
  refreshToken?: boolean;
  userAgent?: boolean;
  fingerprint?: boolean;
  userIp?: boolean;
  expiresAt?: boolean;
  userData?: boolean;
  enabled?: boolean;
  userId?: boolean;
  tenantId?: boolean;
  createdAt?: boolean;
  updatedAt?: boolean;
};

export type SsoRefreshSessionOmit<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  | 'id'
  | 'refreshToken'
  | 'userAgent'
  | 'fingerprint'
  | 'userIp'
  | 'expiresAt'
  | 'userData'
  | 'enabled'
  | 'userId'
  | 'tenantId'
  | 'createdAt'
  | 'updatedAt',
  ExtArgs['result']['ssoRefreshSession']
>;
export type SsoRefreshSessionInclude<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  SsoTenant?: boolean | Prisma.SsoTenantDefaultArgs<ExtArgs>;
  SsoUser?: boolean | Prisma.SsoUserDefaultArgs<ExtArgs>;
};
export type SsoRefreshSessionIncludeCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  SsoTenant?: boolean | Prisma.SsoTenantDefaultArgs<ExtArgs>;
  SsoUser?: boolean | Prisma.SsoUserDefaultArgs<ExtArgs>;
};
export type SsoRefreshSessionIncludeUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  SsoTenant?: boolean | Prisma.SsoTenantDefaultArgs<ExtArgs>;
  SsoUser?: boolean | Prisma.SsoUserDefaultArgs<ExtArgs>;
};

export type $SsoRefreshSessionPayload<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: 'SsoRefreshSession';
  objects: {
    SsoTenant: Prisma.$SsoTenantPayload<ExtArgs>;
    SsoUser: Prisma.$SsoUserPayload<ExtArgs>;
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      /**
       * @DtoCreateHidden
       */
      id: string;
      /**
       * @DtoEntityHidden
       */
      refreshToken: string;
      userAgent: string | null;
      /**
       * @DtoEntityHidden
       */
      fingerprint: string | null;
      userIp: string | null;
      expiresAt: Date | null;
      userData: runtime.JsonValue | null;
      enabled: boolean;
      /**
       * @DtoCreateOptional
       * @DtoUpdateOptional
       */
      userId: string;
      /**
       * @DtoCreateOptional
       * @DtoUpdateOptional
       */
      tenantId: string;
      /**
       * @DtoCreateHidden
       * @DtoUpdateHidden
       */
      createdAt: Date;
      /**
       * @DtoCreateHidden
       * @DtoUpdateHidden
       */
      updatedAt: Date;
    },
    ExtArgs['result']['ssoRefreshSession']
  >;
  composites: {};
};

export type SsoRefreshSessionGetPayload<S extends boolean | null | undefined | SsoRefreshSessionDefaultArgs> =
  runtime.Types.Result.GetResult<Prisma.$SsoRefreshSessionPayload, S>;

export type SsoRefreshSessionCountArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<SsoRefreshSessionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
  select?: SsoRefreshSessionCountAggregateInputType | true;
};

export interface SsoRefreshSessionDelegate<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SsoRefreshSession']; meta: { name: 'SsoRefreshSession' } };
  /**
   * Find zero or one SsoRefreshSession that matches the filter.
   * @param {SsoRefreshSessionFindUniqueArgs} args - Arguments to find a SsoRefreshSession
   * @example
   * // Get one SsoRefreshSession
   * const ssoRefreshSession = await prisma.ssoRefreshSession.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends SsoRefreshSessionFindUniqueArgs>(
    args: Prisma.SelectSubset<T, SsoRefreshSessionFindUniqueArgs<ExtArgs>>,
  ): Prisma.Prisma__SsoRefreshSessionClient<
    runtime.Types.Result.GetResult<
      Prisma.$SsoRefreshSessionPayload<ExtArgs>,
      T,
      'findUnique',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one SsoRefreshSession that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {SsoRefreshSessionFindUniqueOrThrowArgs} args - Arguments to find a SsoRefreshSession
   * @example
   * // Get one SsoRefreshSession
   * const ssoRefreshSession = await prisma.ssoRefreshSession.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends SsoRefreshSessionFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, SsoRefreshSessionFindUniqueOrThrowArgs<ExtArgs>>,
  ): Prisma.Prisma__SsoRefreshSessionClient<
    runtime.Types.Result.GetResult<
      Prisma.$SsoRefreshSessionPayload<ExtArgs>,
      T,
      'findUniqueOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first SsoRefreshSession that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SsoRefreshSessionFindFirstArgs} args - Arguments to find a SsoRefreshSession
   * @example
   * // Get one SsoRefreshSession
   * const ssoRefreshSession = await prisma.ssoRefreshSession.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends SsoRefreshSessionFindFirstArgs>(
    args?: Prisma.SelectSubset<T, SsoRefreshSessionFindFirstArgs<ExtArgs>>,
  ): Prisma.Prisma__SsoRefreshSessionClient<
    runtime.Types.Result.GetResult<Prisma.$SsoRefreshSessionPayload<ExtArgs>, T, 'findFirst', GlobalOmitOptions> | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first SsoRefreshSession that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SsoRefreshSessionFindFirstOrThrowArgs} args - Arguments to find a SsoRefreshSession
   * @example
   * // Get one SsoRefreshSession
   * const ssoRefreshSession = await prisma.ssoRefreshSession.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends SsoRefreshSessionFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, SsoRefreshSessionFindFirstOrThrowArgs<ExtArgs>>,
  ): Prisma.Prisma__SsoRefreshSessionClient<
    runtime.Types.Result.GetResult<Prisma.$SsoRefreshSessionPayload<ExtArgs>, T, 'findFirstOrThrow', GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more SsoRefreshSessions that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SsoRefreshSessionFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all SsoRefreshSessions
   * const ssoRefreshSessions = await prisma.ssoRefreshSession.findMany()
   *
   * // Get first 10 SsoRefreshSessions
   * const ssoRefreshSessions = await prisma.ssoRefreshSession.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const ssoRefreshSessionWithIdOnly = await prisma.ssoRefreshSession.findMany({ select: { id: true } })
   *
   */
  findMany<T extends SsoRefreshSessionFindManyArgs>(
    args?: Prisma.SelectSubset<T, SsoRefreshSessionFindManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<Prisma.$SsoRefreshSessionPayload<ExtArgs>, T, 'findMany', GlobalOmitOptions>
  >;

  /**
   * Create a SsoRefreshSession.
   * @param {SsoRefreshSessionCreateArgs} args - Arguments to create a SsoRefreshSession.
   * @example
   * // Create one SsoRefreshSession
   * const SsoRefreshSession = await prisma.ssoRefreshSession.create({
   *   data: {
   *     // ... data to create a SsoRefreshSession
   *   }
   * })
   *
   */
  create<T extends SsoRefreshSessionCreateArgs>(
    args: Prisma.SelectSubset<T, SsoRefreshSessionCreateArgs<ExtArgs>>,
  ): Prisma.Prisma__SsoRefreshSessionClient<
    runtime.Types.Result.GetResult<Prisma.$SsoRefreshSessionPayload<ExtArgs>, T, 'create', GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many SsoRefreshSessions.
   * @param {SsoRefreshSessionCreateManyArgs} args - Arguments to create many SsoRefreshSessions.
   * @example
   * // Create many SsoRefreshSessions
   * const ssoRefreshSession = await prisma.ssoRefreshSession.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends SsoRefreshSessionCreateManyArgs>(
    args?: Prisma.SelectSubset<T, SsoRefreshSessionCreateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many SsoRefreshSessions and returns the data saved in the database.
   * @param {SsoRefreshSessionCreateManyAndReturnArgs} args - Arguments to create many SsoRefreshSessions.
   * @example
   * // Create many SsoRefreshSessions
   * const ssoRefreshSession = await prisma.ssoRefreshSession.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many SsoRefreshSessions and only return the `id`
   * const ssoRefreshSessionWithIdOnly = await prisma.ssoRefreshSession.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends SsoRefreshSessionCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, SsoRefreshSessionCreateManyAndReturnArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$SsoRefreshSessionPayload<ExtArgs>,
      T,
      'createManyAndReturn',
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a SsoRefreshSession.
   * @param {SsoRefreshSessionDeleteArgs} args - Arguments to delete one SsoRefreshSession.
   * @example
   * // Delete one SsoRefreshSession
   * const SsoRefreshSession = await prisma.ssoRefreshSession.delete({
   *   where: {
   *     // ... filter to delete one SsoRefreshSession
   *   }
   * })
   *
   */
  delete<T extends SsoRefreshSessionDeleteArgs>(
    args: Prisma.SelectSubset<T, SsoRefreshSessionDeleteArgs<ExtArgs>>,
  ): Prisma.Prisma__SsoRefreshSessionClient<
    runtime.Types.Result.GetResult<Prisma.$SsoRefreshSessionPayload<ExtArgs>, T, 'delete', GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one SsoRefreshSession.
   * @param {SsoRefreshSessionUpdateArgs} args - Arguments to update one SsoRefreshSession.
   * @example
   * // Update one SsoRefreshSession
   * const ssoRefreshSession = await prisma.ssoRefreshSession.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends SsoRefreshSessionUpdateArgs>(
    args: Prisma.SelectSubset<T, SsoRefreshSessionUpdateArgs<ExtArgs>>,
  ): Prisma.Prisma__SsoRefreshSessionClient<
    runtime.Types.Result.GetResult<Prisma.$SsoRefreshSessionPayload<ExtArgs>, T, 'update', GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more SsoRefreshSessions.
   * @param {SsoRefreshSessionDeleteManyArgs} args - Arguments to filter SsoRefreshSessions to delete.
   * @example
   * // Delete a few SsoRefreshSessions
   * const { count } = await prisma.ssoRefreshSession.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends SsoRefreshSessionDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, SsoRefreshSessionDeleteManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more SsoRefreshSessions.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SsoRefreshSessionUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many SsoRefreshSessions
   * const ssoRefreshSession = await prisma.ssoRefreshSession.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends SsoRefreshSessionUpdateManyArgs>(
    args: Prisma.SelectSubset<T, SsoRefreshSessionUpdateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more SsoRefreshSessions and returns the data updated in the database.
   * @param {SsoRefreshSessionUpdateManyAndReturnArgs} args - Arguments to update many SsoRefreshSessions.
   * @example
   * // Update many SsoRefreshSessions
   * const ssoRefreshSession = await prisma.ssoRefreshSession.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more SsoRefreshSessions and only return the `id`
   * const ssoRefreshSessionWithIdOnly = await prisma.ssoRefreshSession.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends SsoRefreshSessionUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, SsoRefreshSessionUpdateManyAndReturnArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$SsoRefreshSessionPayload<ExtArgs>,
      T,
      'updateManyAndReturn',
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one SsoRefreshSession.
   * @param {SsoRefreshSessionUpsertArgs} args - Arguments to update or create a SsoRefreshSession.
   * @example
   * // Update or create a SsoRefreshSession
   * const ssoRefreshSession = await prisma.ssoRefreshSession.upsert({
   *   create: {
   *     // ... data to create a SsoRefreshSession
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the SsoRefreshSession we want to update
   *   }
   * })
   */
  upsert<T extends SsoRefreshSessionUpsertArgs>(
    args: Prisma.SelectSubset<T, SsoRefreshSessionUpsertArgs<ExtArgs>>,
  ): Prisma.Prisma__SsoRefreshSessionClient<
    runtime.Types.Result.GetResult<Prisma.$SsoRefreshSessionPayload<ExtArgs>, T, 'upsert', GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of SsoRefreshSessions.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SsoRefreshSessionCountArgs} args - Arguments to filter SsoRefreshSessions to count.
   * @example
   * // Count the number of SsoRefreshSessions
   * const count = await prisma.ssoRefreshSession.count({
   *   where: {
   *     // ... the filter for the SsoRefreshSessions we want to count
   *   }
   * })
   **/
  count<T extends SsoRefreshSessionCountArgs>(
    args?: Prisma.Subset<T, SsoRefreshSessionCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], SsoRefreshSessionCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a SsoRefreshSession.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SsoRefreshSessionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends SsoRefreshSessionAggregateArgs>(
    args: Prisma.Subset<T, SsoRefreshSessionAggregateArgs>,
  ): Prisma.PrismaPromise<GetSsoRefreshSessionAggregateType<T>>;

  /**
   * Group by SsoRefreshSession.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SsoRefreshSessionGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends SsoRefreshSessionGroupByArgs,
    HasSelectOrTake extends Prisma.Or<Prisma.Extends<'skip', Prisma.Keys<T>>, Prisma.Extends<'take', Prisma.Keys<T>>>,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: SsoRefreshSessionGroupByArgs['orderBy'] }
      : { orderBy?: SsoRefreshSessionGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [Error, 'Field ', P, ` in "having" needs to be provided in "by"`];
          }[HavingFields]
        : 'take' extends Prisma.Keys<T>
          ? 'orderBy' extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : 'skip' extends Prisma.Keys<T>
            ? 'orderBy' extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<T, SsoRefreshSessionGroupByArgs, OrderByArg> & InputErrors,
  ): {} extends InputErrors ? GetSsoRefreshSessionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the SsoRefreshSession model
   */
  readonly fields: SsoRefreshSessionFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for SsoRefreshSession.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__SsoRefreshSessionClient<
  T,
  Null = never,
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: 'PrismaPromise';
  SsoTenant<T extends Prisma.SsoTenantDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.SsoTenantDefaultArgs<ExtArgs>>,
  ): Prisma.Prisma__SsoTenantClient<
    runtime.Types.Result.GetResult<Prisma.$SsoTenantPayload<ExtArgs>, T, 'findUniqueOrThrow', GlobalOmitOptions> | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  SsoUser<T extends Prisma.SsoUserDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.SsoUserDefaultArgs<ExtArgs>>,
  ): Prisma.Prisma__SsoUserClient<
    runtime.Types.Result.GetResult<Prisma.$SsoUserPayload<ExtArgs>, T, 'findUniqueOrThrow', GlobalOmitOptions> | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the SsoRefreshSession model
 */
export interface SsoRefreshSessionFieldRefs {
  readonly id: Prisma.FieldRef<'SsoRefreshSession', 'String'>;
  readonly refreshToken: Prisma.FieldRef<'SsoRefreshSession', 'String'>;
  readonly userAgent: Prisma.FieldRef<'SsoRefreshSession', 'String'>;
  readonly fingerprint: Prisma.FieldRef<'SsoRefreshSession', 'String'>;
  readonly userIp: Prisma.FieldRef<'SsoRefreshSession', 'String'>;
  readonly expiresAt: Prisma.FieldRef<'SsoRefreshSession', 'DateTime'>;
  readonly userData: Prisma.FieldRef<'SsoRefreshSession', 'Json'>;
  readonly enabled: Prisma.FieldRef<'SsoRefreshSession', 'Boolean'>;
  readonly userId: Prisma.FieldRef<'SsoRefreshSession', 'String'>;
  readonly tenantId: Prisma.FieldRef<'SsoRefreshSession', 'String'>;
  readonly createdAt: Prisma.FieldRef<'SsoRefreshSession', 'DateTime'>;
  readonly updatedAt: Prisma.FieldRef<'SsoRefreshSession', 'DateTime'>;
}

// Custom InputTypes
/**
 * SsoRefreshSession findUnique
 */
export type SsoRefreshSessionFindUniqueArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SsoRefreshSession
   */
  select?: Prisma.SsoRefreshSessionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SsoRefreshSession
   */
  omit?: Prisma.SsoRefreshSessionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SsoRefreshSessionInclude<ExtArgs> | null;
  /**
   * Filter, which SsoRefreshSession to fetch.
   */
  where: Prisma.SsoRefreshSessionWhereUniqueInput;
};

/**
 * SsoRefreshSession findUniqueOrThrow
 */
export type SsoRefreshSessionFindUniqueOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SsoRefreshSession
   */
  select?: Prisma.SsoRefreshSessionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SsoRefreshSession
   */
  omit?: Prisma.SsoRefreshSessionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SsoRefreshSessionInclude<ExtArgs> | null;
  /**
   * Filter, which SsoRefreshSession to fetch.
   */
  where: Prisma.SsoRefreshSessionWhereUniqueInput;
};

/**
 * SsoRefreshSession findFirst
 */
export type SsoRefreshSessionFindFirstArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SsoRefreshSession
   */
  select?: Prisma.SsoRefreshSessionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SsoRefreshSession
   */
  omit?: Prisma.SsoRefreshSessionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SsoRefreshSessionInclude<ExtArgs> | null;
  /**
   * Filter, which SsoRefreshSession to fetch.
   */
  where?: Prisma.SsoRefreshSessionWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of SsoRefreshSessions to fetch.
   */
  orderBy?: Prisma.SsoRefreshSessionOrderByWithRelationInput | Prisma.SsoRefreshSessionOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for SsoRefreshSessions.
   */
  cursor?: Prisma.SsoRefreshSessionWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` SsoRefreshSessions from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` SsoRefreshSessions.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of SsoRefreshSessions.
   */
  distinct?: Prisma.SsoRefreshSessionScalarFieldEnum | Prisma.SsoRefreshSessionScalarFieldEnum[];
};

/**
 * SsoRefreshSession findFirstOrThrow
 */
export type SsoRefreshSessionFindFirstOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SsoRefreshSession
   */
  select?: Prisma.SsoRefreshSessionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SsoRefreshSession
   */
  omit?: Prisma.SsoRefreshSessionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SsoRefreshSessionInclude<ExtArgs> | null;
  /**
   * Filter, which SsoRefreshSession to fetch.
   */
  where?: Prisma.SsoRefreshSessionWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of SsoRefreshSessions to fetch.
   */
  orderBy?: Prisma.SsoRefreshSessionOrderByWithRelationInput | Prisma.SsoRefreshSessionOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for SsoRefreshSessions.
   */
  cursor?: Prisma.SsoRefreshSessionWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` SsoRefreshSessions from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` SsoRefreshSessions.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of SsoRefreshSessions.
   */
  distinct?: Prisma.SsoRefreshSessionScalarFieldEnum | Prisma.SsoRefreshSessionScalarFieldEnum[];
};

/**
 * SsoRefreshSession findMany
 */
export type SsoRefreshSessionFindManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SsoRefreshSession
   */
  select?: Prisma.SsoRefreshSessionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SsoRefreshSession
   */
  omit?: Prisma.SsoRefreshSessionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SsoRefreshSessionInclude<ExtArgs> | null;
  /**
   * Filter, which SsoRefreshSessions to fetch.
   */
  where?: Prisma.SsoRefreshSessionWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of SsoRefreshSessions to fetch.
   */
  orderBy?: Prisma.SsoRefreshSessionOrderByWithRelationInput | Prisma.SsoRefreshSessionOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing SsoRefreshSessions.
   */
  cursor?: Prisma.SsoRefreshSessionWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` SsoRefreshSessions from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` SsoRefreshSessions.
   */
  skip?: number;
  distinct?: Prisma.SsoRefreshSessionScalarFieldEnum | Prisma.SsoRefreshSessionScalarFieldEnum[];
};

/**
 * SsoRefreshSession create
 */
export type SsoRefreshSessionCreateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SsoRefreshSession
   */
  select?: Prisma.SsoRefreshSessionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SsoRefreshSession
   */
  omit?: Prisma.SsoRefreshSessionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SsoRefreshSessionInclude<ExtArgs> | null;
  /**
   * The data needed to create a SsoRefreshSession.
   */
  data: Prisma.XOR<Prisma.SsoRefreshSessionCreateInput, Prisma.SsoRefreshSessionUncheckedCreateInput>;
};

/**
 * SsoRefreshSession createMany
 */
export type SsoRefreshSessionCreateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many SsoRefreshSessions.
   */
  data: Prisma.SsoRefreshSessionCreateManyInput | Prisma.SsoRefreshSessionCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * SsoRefreshSession createManyAndReturn
 */
export type SsoRefreshSessionCreateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SsoRefreshSession
   */
  select?: Prisma.SsoRefreshSessionSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the SsoRefreshSession
   */
  omit?: Prisma.SsoRefreshSessionOmit<ExtArgs> | null;
  /**
   * The data used to create many SsoRefreshSessions.
   */
  data: Prisma.SsoRefreshSessionCreateManyInput | Prisma.SsoRefreshSessionCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SsoRefreshSessionIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * SsoRefreshSession update
 */
export type SsoRefreshSessionUpdateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SsoRefreshSession
   */
  select?: Prisma.SsoRefreshSessionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SsoRefreshSession
   */
  omit?: Prisma.SsoRefreshSessionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SsoRefreshSessionInclude<ExtArgs> | null;
  /**
   * The data needed to update a SsoRefreshSession.
   */
  data: Prisma.XOR<Prisma.SsoRefreshSessionUpdateInput, Prisma.SsoRefreshSessionUncheckedUpdateInput>;
  /**
   * Choose, which SsoRefreshSession to update.
   */
  where: Prisma.SsoRefreshSessionWhereUniqueInput;
};

/**
 * SsoRefreshSession updateMany
 */
export type SsoRefreshSessionUpdateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update SsoRefreshSessions.
   */
  data: Prisma.XOR<Prisma.SsoRefreshSessionUpdateManyMutationInput, Prisma.SsoRefreshSessionUncheckedUpdateManyInput>;
  /**
   * Filter which SsoRefreshSessions to update
   */
  where?: Prisma.SsoRefreshSessionWhereInput;
  /**
   * Limit how many SsoRefreshSessions to update.
   */
  limit?: number;
};

/**
 * SsoRefreshSession updateManyAndReturn
 */
export type SsoRefreshSessionUpdateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SsoRefreshSession
   */
  select?: Prisma.SsoRefreshSessionSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the SsoRefreshSession
   */
  omit?: Prisma.SsoRefreshSessionOmit<ExtArgs> | null;
  /**
   * The data used to update SsoRefreshSessions.
   */
  data: Prisma.XOR<Prisma.SsoRefreshSessionUpdateManyMutationInput, Prisma.SsoRefreshSessionUncheckedUpdateManyInput>;
  /**
   * Filter which SsoRefreshSessions to update
   */
  where?: Prisma.SsoRefreshSessionWhereInput;
  /**
   * Limit how many SsoRefreshSessions to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SsoRefreshSessionIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * SsoRefreshSession upsert
 */
export type SsoRefreshSessionUpsertArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SsoRefreshSession
   */
  select?: Prisma.SsoRefreshSessionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SsoRefreshSession
   */
  omit?: Prisma.SsoRefreshSessionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SsoRefreshSessionInclude<ExtArgs> | null;
  /**
   * The filter to search for the SsoRefreshSession to update in case it exists.
   */
  where: Prisma.SsoRefreshSessionWhereUniqueInput;
  /**
   * In case the SsoRefreshSession found by the `where` argument doesn't exist, create a new SsoRefreshSession with this data.
   */
  create: Prisma.XOR<Prisma.SsoRefreshSessionCreateInput, Prisma.SsoRefreshSessionUncheckedCreateInput>;
  /**
   * In case the SsoRefreshSession was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.SsoRefreshSessionUpdateInput, Prisma.SsoRefreshSessionUncheckedUpdateInput>;
};

/**
 * SsoRefreshSession delete
 */
export type SsoRefreshSessionDeleteArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SsoRefreshSession
   */
  select?: Prisma.SsoRefreshSessionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SsoRefreshSession
   */
  omit?: Prisma.SsoRefreshSessionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SsoRefreshSessionInclude<ExtArgs> | null;
  /**
   * Filter which SsoRefreshSession to delete.
   */
  where: Prisma.SsoRefreshSessionWhereUniqueInput;
};

/**
 * SsoRefreshSession deleteMany
 */
export type SsoRefreshSessionDeleteManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which SsoRefreshSessions to delete
   */
  where?: Prisma.SsoRefreshSessionWhereInput;
  /**
   * Limit how many SsoRefreshSessions to delete.
   */
  limit?: number;
};

/**
 * SsoRefreshSession without action
 */
export type SsoRefreshSessionDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SsoRefreshSession
   */
  select?: Prisma.SsoRefreshSessionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SsoRefreshSession
   */
  omit?: Prisma.SsoRefreshSessionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SsoRefreshSessionInclude<ExtArgs> | null;
};
